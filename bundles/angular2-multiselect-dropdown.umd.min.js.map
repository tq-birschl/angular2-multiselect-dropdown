{"version":3,"sources":["ng://angular2-multiselect-dropdown/lib/multiselect.model.ts","ng://angular2-multiselect-dropdown/lib/clickOutside.ts","ng://angular2-multiselect-dropdown/lib/multiselect.service.ts","ng://angular2-multiselect-dropdown/lib/list-filter.ts","ng://angular2-multiselect-dropdown/lib/menu-item.ts","ng://angular2-multiselect-dropdown/lib/virtual-scroll/virtual-scroll.ts","ng://angular2-multiselect-dropdown/lib/multiselect.component.ts"],"names":["MyException","status","body","this","ClickOutsideDirective","_elementRef","clickOutside","EventEmitter","prototype","onClick","event","targetElement","nativeElement","contains","emit","Directive","args","selector","ElementRef","Output","HostListener","type","ScrollDirective","scroll","styleDirective","el","ngOnInit","style","top","styleVal","ngOnChanges","Input","setPosition","height","bottom","parseInt","DataService","filteredData","subject","Subject","setData","data","next","getData","asObservable","getFilteredData","length","Injectable","ListFilterPipe","ds","filteredList","transform","items","filter","searchBy","_this","item","applyFilter","found","grpTitle","t","toString","toLowerCase","indexOf","prop","Pipe","name","pure","Item","Component","template","ContentChild","TemplateRef","static","Badge","Search","TemplateRenderer","viewContainer","view","createEmbeddedView","$implicit","ngOnDestroy","destroy","ViewContainerRef","CIcon","encapsulation","ViewEncapsulation","None","VIRTUAL_SCROLLER_DEFAULT_OPTIONS_FACTORY","scrollThrottlingTime","scrollDebounceTime","scrollAnimationTime","checkResizeInterval","resizeBypassRefreshThreshold","modifyOverflowStyleOfParentScroll","stripedTable","VirtualScrollerComponent","element","renderer","zone","changeDetectorRef","platformId","options","window","executeRefreshOutsideAngularZone","_enableUnequalChildrenSizes","useMarginInsteadOfTranslate","ssrViewportWidth","ssrViewportHeight","_bufferAmount","_items","compareItems","item1","item2","vsUpdate","vsChange","vsStart","vsEnd","calculatedScrollbarWidth","calculatedScrollbarHeight","padding","previousViewPort","cachedPageSize","previousScrollNumberElements","isAngularUniversalSSR","isPlatformServer","scrollbarWidth","scrollbarHeight","horizontal","resetWrapGroupDimensions","Object","defineProperty","pageInfo","startIndex","endIndex","scrollStartPosition","scrollEndPosition","maxScrollPosition","startIndexWithBuffer","endIndexWithBuffer","value","minMeasuredChildWidth","undefined","minMeasuredChildHeight","enableUnequalChildrenSizes","_scrollThrottlingTime","updateOnScrollFunction","_scrollDebounceTime","_this_1","onScroll","debounce","refresh_internal","throttleTrailing","_checkResizeInterval","addScrollEventHandlers","_horizontal","updateDirection","revertParentOverscroll","scrollElement","getScrollElement","oldParentScrollOverflow","y","x","_parentScroll","removeScrollEventHandlers","changes","indexLengthChanged","cachedItemsLength","firstRun","previousValue","ngDoCheck","viewPortItems","itemsArrayChanged","i","refresh","invalidateAllCachedMeasurements","wrapGroupDimensions","maxChildSizePerWrapGroup","numberOfKnownWrapGroupChildSizes","sumOfKnownWrapGroupChildWidths","sumOfKnownWrapGroupChildHeights","invalidateCachedMeasurementForItem","index","invalidateCachedMeasurementAtIndex","cachedMeasurement","childWidth","childHeight","scrollInto","alignToBeginning","additionalOffset","animationMilliseconds","animationCompletedCallback","scrollToIndex","maxRetries","retryIfNeeded","dimensions","calculateDimensions","desiredStartIndex","Math","min","max","itemCount","scrollToIndex_internal","calculatePadding","wrapGroupsPerPage","_childScrollDim","scrollToPosition","scrollPosition","getElementsOffset","animationRequest","currentTween","stop","setProperty","_scrollType","tweenConfigObj","newTween","tween.Tween","to","easing","tween.Easing","Quadratic","Out","onUpdate","isNaN","onStop","cancelAnimationFrame","start","animate","time","update","runOutsideAngular","requestAnimationFrame","getElementSize","result","getBoundingClientRect","styles","getComputedStyle","marginTop","marginBottom","marginLeft","marginRight","left","right","width","checkScrollElementResized","sizeChanged","boundingRect","previousScrollBoundingRect","widthChange","abs","heightChange","_invisiblePaddingProperty","_offsetType","_pageOffsetType","_marginDir","_translateDir","func","wait","throttled","apply","arguments","timeout","_arguments","setTimeout","clearTimeout","itemsArrayModified","refreshCompletedCallback","maxRunTimes","oldViewPort_1","oldViewPortItems_1","oldRefreshCompletedCallback_1","scrollLengthDelta","scrollLength","oldStartItem_1","oldStartItemIndex","findIndex","itemOrderChanged","viewport","calculateViewport","startChanged","endChanged","scrollLengthChanged","paddingChanged","scrollPositionChanged","setStyle","invisiblePaddingElementRef","contentElementRef","headerElementRef","containerOffset","offset","clientHeight","changeEventArg","handleChanged","slice","markForCheck","run","parentScroll","Window","document","scrollingElement","documentElement","disposeScrollHandler","listen","disposeResizeHandler","checkScrollElementResizedTimer","setInterval","clearInterval","containerElementRef","elementClientRect","scrollClientRect","countItemsPerWrapGroup","round","ssrChildHeight","ssrChildWidth","propertyName","children","childrenLength","firstOffset","getScrollStartPosition","windowScrollValue","oldWrapGroupDimensions","itemsPerWrapGroup","wrapGroupIndex","oldWrapGroupDimension","itemsChanged","arrayStartIndex","offsetHeight","offsetWidth","clientWidth","defaultChildWidth","defaultChildHeight","viewportWidth","viewportHeight","content","itemsPerRow","ceil","itemsPerCol","scrollOffset","maxWidthForWrapGroup","maxHeightForWrapGroup","sumOfVisibleMaxWidths","sumOfVisibleMaxHeights","child","clientRect","oldValue","maxVisibleWidthForWrapGroup","scrollOffsetToRemove","maxVisibleHeightForWrapGroup","averageChildWidth","averageChildHeight","itemsPerPage","pageCount_fractional","numberOfWrapGroups","defaultScrollLengthPerWrapGroup","numUnknownChildSizes","childSize","viewportLength","arrayStartIndexWithBuffer","startingWrapGroupIndex","floor","calculatePageInfo","scrollPercentage","totalScrolledLength","startingArrayIndex_fractional","maxStart","bufferBoundary","arrayEndIndex","endIndexWithinWrapGroup","bufferSize","bufferAmount","newPadding","newScrollLength","exportAs","host","[class.horizontal]","[class.vertical]","[class.selfScroll]","Renderer2","NgZone","ChangeDetectorRef","decorators","Inject","PLATFORM_ID","Optional","ViewChild","read","VirtualScrollerModule","NgModule","exports","declarations","imports","CommonModule","providers","provide","useFactory","DROPDOWN_CONTROL_VALUE_ACCESSOR","NG_VALUE_ACCESSOR","useExisting","forwardRef","AngularMultiSelect","multi","DROPDOWN_CONTROL_VALIDATION","NG_VALIDATORS","noop","cdr","onSelect","onSearch","onDeSelect","onSelectAll","onDeSelectAll","onOpen","onClose","onScrollToEnd","onFilterSelectAll","onFilterDeSelectAll","onAddFilterNewItem","onGroupSelect","onGroupDeSelect","virtualdata","searchTerm$","isActive","isSelectAll","isFilterSelectAll","isInfiniteFilterSelectAll","chunkIndex","cachedItems","groupCachedItems","itemHeight","filterLength","infiniteFilterLength","dropdownListYOffset","defaultSettings","singleSelection","text","enableCheckAll","selectAllText","unSelectAllText","filterSelectAllText","filterUnSelectAllText","enableSearchFilter","maxHeight","badgeShowLimit","classes","disabled","searchPlaceholderText","showCheckbox","noDataLabel","searchAutofocus","lazyLoading","labelKey","primaryKey","position","autoPosition","enableFilterSelectAll","selectGroup","addNewItemOnFilter","addNewButtonText","escapeToClose","clearAll","randomSize","virtualScroollInit","isDisabledItemPresent","onTouchedCallback","onChangeCallback","pipe","debounceTime","distinctUntilChanged","tap","term","subscribe","val","filterInfiniteList","onEscapeDown","settings","closeDropdown","assign","cloneArray","selectedListHeight","selectedListElem","subscription","len_1","forEach","obj","hasOwnProperty","onFilterChange","calculateDropdownDirection","firstChange","groupBy","groupedData","transformData","selectedItems","loading","currentValue","ngAfterViewInit","ngAfterViewChecked","detectChanges","onItemClick","evt","isSelected","limit","limitSelection","removeSelected","addSelected","updateGroupInfo","validate","c","writeValue","msg","e","console","error","registerOnChange","fn","registerOnTouched","trackByFn","clickedItem","push","splice","toggleDropdown","searchInput","searchTempl","focus","getElementsByClassName","getElementsByTagName","preventDefault","openDropdown","closeDropdownOnClickOut","clearSearch","toggleSelectAll","selected","individualData","filterGroupedList","arr","list","some","cat","toggleFilterSelectAll","removed_1","added_1","toggleInfiniteFilterSelectAll","cnt","Array","isArray","JSON","parse","stringify","key","field","groupedObj","reduce","prev","cur","tempArr","keys","map","disabledChildrens","filteredElems","this_1","virtualScroller","resetInfiniteSearch","onScrollEnd","unsubscribe","addFilterNewItem","filterPipe","dropdownHeight","dropdownListElem","selectedListBounds","spaceOnTop","openTowardsTop","clearSelection","[class]","AngularMultiSelectModule","FormsModule"],"mappings":"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","sourcesContent":["export class MyException {\r\n\tstatus : number;\r\n\tbody : any;\r\n\tconstructor(status : number, body : any) {\r\n\t\tthis.status = status;\r\n\t\tthis.body = body;\r\n\t}\r\n\t\r\n}","import { Directive, ElementRef, Output, EventEmitter, HostListener, Input, OnInit, OnChanges } from '@angular/core';\r\n\r\n@Directive({\r\n    selector: '[clickOutside]'\r\n})\r\nexport class ClickOutsideDirective {\r\n    constructor(private _elementRef: ElementRef) {\r\n    }\r\n\r\n    @Output()\r\n    public clickOutside = new EventEmitter<MouseEvent>();\r\n\r\n    @HostListener('document:click', ['$event', '$event.target'])\r\n    @HostListener('document:touchstart', ['$event', '$event.target'])\r\n    public onClick(event: MouseEvent, targetElement: HTMLElement): void {\r\n        if (!targetElement) {\r\n            return;\r\n        }\r\n\r\n        const clickedInside = this._elementRef.nativeElement.contains(targetElement);\r\n        if (!clickedInside) {\r\n            this.clickOutside.emit(event);\r\n        }\r\n    }\r\n}\r\n\r\n@Directive({\r\n    selector: '[scroll]'\r\n})\r\nexport class ScrollDirective {\r\n    constructor(private _elementRef: ElementRef) {\r\n    }\r\n\r\n    @Output()\r\n    public scroll = new EventEmitter<MouseEvent>();\r\n\r\n    @HostListener('scroll', ['$event'])\r\n    public onClick(event: MouseEvent, targetElement: HTMLElement): void {\r\n        this.scroll.emit(event);\r\n    }\r\n}\r\n@Directive({\r\n    selector: '[styleProp]'\r\n})\r\nexport class styleDirective {\r\n\r\n    constructor(private el: ElementRef) {\r\n\r\n    }\r\n\r\n    @Input('styleProp') styleVal: number;\r\n\r\n    ngOnInit() {\r\n\r\n        this.el.nativeElement.style.top = this.styleVal;\r\n    }\r\n    ngOnChanges(): void {\r\n        this.el.nativeElement.style.top = this.styleVal;\r\n    }\r\n}\r\n\r\n\r\n@Directive({\r\n    selector: '[setPosition]'\r\n})\r\nexport class setPosition implements OnInit, OnChanges {\r\n\r\n    @Input('setPosition') height: number;\r\n\r\n    constructor(public el: ElementRef) {\r\n\r\n    }\r\n    ngOnInit() {\r\n        if (this.height) {\r\n            this.el.nativeElement.style.bottom = parseInt(this.height + 15 + \"\") + 'px';\r\n        }\r\n    }\r\n    ngOnChanges(): void {\r\n        if (this.height) {\r\n            this.el.nativeElement.style.bottom = parseInt(this.height + 15 + \"\") + 'px';\r\n        }\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport { Observable, Subject } from 'rxjs';\r\n\r\n\r\n@Injectable()\r\nexport class DataService {\r\n\r\n  filteredData: any = [];\r\n  private subject = new Subject<any>();\r\n\r\n  setData(data: any) {\r\n\r\n    this.filteredData = data;\r\n    this.subject.next(data);\r\n  }\r\n  getData(): Observable<any> {\r\n    return this.subject.asObservable();\r\n  }\r\n  getFilteredData() {\r\n    if (this.filteredData && this.filteredData.length > 0) {\r\n      return this.filteredData;\r\n    }\r\n    else {\r\n      return [];\r\n    }\r\n  }\r\n\r\n}","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { DataService } from './multiselect.service';\r\n\r\n\r\n@Pipe({\r\n    name: 'listFilter',\r\n    pure: true\r\n})\r\nexport class ListFilterPipe implements PipeTransform {\r\n\r\n    public filteredList: any = [];\r\n    constructor(private ds: DataService) {\r\n\r\n    }\r\n\r\n    transform(items: any[], filter: any, searchBy: any): any[] {\r\n        if (!items || !filter) {\r\n            this.ds.setData(items);\r\n            return items;\r\n        }\r\n        this.filteredList = items.filter((item: any) => this.applyFilter(item, filter, searchBy));\r\n        this.ds.setData(this.filteredList);\r\n        return this.filteredList;\r\n    }\r\n    applyFilter(item: any, filter: any, searchBy: any): boolean {\r\n        let found = false;\r\n        if (searchBy.length > 0) {\r\n            if (item.grpTitle) {\r\n                found = true;\r\n            }\r\n            else {\r\n                for (var t = 0; t < searchBy.length; t++) {\r\n                    if (filter && item[searchBy[t]] && item[searchBy[t]] != \"\") {\r\n                        if (item[searchBy[t]].toString().toLowerCase().indexOf(filter.toLowerCase()) >= 0) {\r\n                            found = true;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n        } else {\r\n            if (item.grpTitle) {\r\n                found = true;\r\n            }\r\n            else {\r\n                for (var prop in item) {\r\n                    if (filter && item[prop]) {\r\n                        if (item[prop].toString().toLowerCase().indexOf(filter.toLowerCase()) >= 0) {\r\n                            found = true;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return found;\r\n    }\r\n}","import { Component, OnInit, OnDestroy, NgModule, TemplateRef, AfterContentInit, ContentChild, EmbeddedViewRef, OnChanges, ViewContainerRef, ViewEncapsulation, Input, Output, EventEmitter, ElementRef, AfterViewInit, Pipe, PipeTransform, Directive } from '@angular/core';\r\nimport { SafeResourceUrl, DomSanitizer } from '@angular/platform-browser';\r\nimport { CommonModule }       from '@angular/common';\r\n\r\n@Component({\r\n  selector: 'c-item',\r\n  template: ``\r\n})\r\n\r\nexport class Item { \r\n\r\n    @ContentChild(TemplateRef, {static: true}) template: TemplateRef<any>\r\n    constructor() {   \r\n    }\r\n\r\n}\r\n\r\n@Component({\r\n  selector: 'c-badge',\r\n  template: ``\r\n})\r\n\r\nexport class Badge { \r\n\r\n    @ContentChild(TemplateRef, {static: true}) template: TemplateRef<any>\r\n    constructor() {   \r\n    }\r\n\r\n}\r\n\r\n@Component({\r\n  selector: 'c-search',\r\n  template: ``\r\n})\r\n\r\nexport class Search { \r\n\r\n    @ContentChild(TemplateRef, {static: true}) template: TemplateRef<any>\r\n    constructor() {   \r\n    }\r\n\r\n}\r\n@Component({\r\n  selector: 'c-templateRenderer',\r\n  template: ``\r\n})\r\n\r\nexport class TemplateRenderer implements OnInit, OnDestroy { \r\n\r\n    @Input() data: any\r\n    @Input() item: any\r\n    view: EmbeddedViewRef<any>;\r\n\r\n    constructor(public viewContainer: ViewContainerRef) {   \r\n    }\r\n    ngOnInit() {\r\n        this.view = this.viewContainer.createEmbeddedView(this.data.template, {\r\n            '\\$implicit': this.data,\r\n            'item':this.item\r\n        });\r\n    }\r\n\t\r\n    ngOnDestroy() {\r\n\t\tthis.view.destroy();\r\n\t}\r\n\r\n}\r\n\r\n@Component({\r\n  selector: 'c-icon',\r\n  template: `<svg *ngIf=\"name == 'remove'\" width=\"100%\" height=\"100%\" version=\"1.1\" id=\"Capa_1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\"\r\n                        viewBox=\"0 0 47.971 47.971\" style=\"enable-background:new 0 0 47.971 47.971;\" xml:space=\"preserve\">\r\n                        <g>\r\n                            <path d=\"M28.228,23.986L47.092,5.122c1.172-1.171,1.172-3.071,0-4.242c-1.172-1.172-3.07-1.172-4.242,0L23.986,19.744L5.121,0.88\r\n                                c-1.172-1.172-3.07-1.172-4.242,0c-1.172,1.171-1.172,3.071,0,4.242l18.865,18.864L0.879,42.85c-1.172,1.171-1.172,3.071,0,4.242\r\n                                C1.465,47.677,2.233,47.97,3,47.97s1.535-0.293,2.121-0.879l18.865-18.864L42.85,47.091c0.586,0.586,1.354,0.879,2.121,0.879\r\n                                s1.535-0.293,2.121-0.879c1.172-1.171,1.172-3.071,0-4.242L28.228,23.986z\"/>\r\n                        </g>\r\n                    </svg>\r\n            <svg *ngIf=\"name == 'angle-down'\" version=\"1.1\" id=\"Capa_1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\"\r\n\t width=\"100%\" height=\"100%\" viewBox=\"0 0 612 612\" style=\"enable-background:new 0 0 612 612;\" xml:space=\"preserve\">\r\n<g>\r\n\t<g id=\"_x31_0_34_\">\r\n\t\t<g>\r\n\t\t\t<path d=\"M604.501,134.782c-9.999-10.05-26.222-10.05-36.221,0L306.014,422.558L43.721,134.782\r\n\t\t\t\tc-9.999-10.05-26.223-10.05-36.222,0s-9.999,26.35,0,36.399l279.103,306.241c5.331,5.357,12.422,7.652,19.386,7.296\r\n\t\t\t\tc6.988,0.356,14.055-1.939,19.386-7.296l279.128-306.268C614.5,161.106,614.5,144.832,604.501,134.782z\"/>\r\n\t\t</g>\r\n\t</g>\r\n</g>\r\n</svg>\r\n<svg *ngIf=\"name == 'angle-up'\" version=\"1.1\" id=\"Capa_1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\"\r\n\t width=\"100%\" height=\"100%\" viewBox=\"0 0 612 612\" style=\"enable-background:new 0 0 612 612;\" xml:space=\"preserve\">\r\n<g>\r\n\t<g id=\"_x39__30_\">\r\n\t\t<g>\r\n\t\t\t<path d=\"M604.501,440.509L325.398,134.956c-5.331-5.357-12.423-7.627-19.386-7.27c-6.989-0.357-14.056,1.913-19.387,7.27\r\n\t\t\t\tL7.499,440.509c-9.999,10.024-9.999,26.298,0,36.323s26.223,10.024,36.222,0l262.293-287.164L568.28,476.832\r\n\t\t\t\tc9.999,10.024,26.222,10.024,36.221,0C614.5,466.809,614.5,450.534,604.501,440.509z\"/>\r\n\t\t</g>\r\n\t</g>\r\n</g>\r\n\r\n</svg>\r\n<svg *ngIf=\"name == 'search'\" version=\"1.1\" id=\"Capa_1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\"\r\n\t width=\"100%\" height=\"100%\" viewBox=\"0 0 615.52 615.52\" style=\"enable-background:new 0 0 615.52 615.52;\"\r\n\t xml:space=\"preserve\">\r\n<g>\r\n\t<g>\r\n\t\t<g id=\"Search__x28_and_thou_shall_find_x29_\">\r\n\t\t\t<g>\r\n\t\t\t\t<path d=\"M602.531,549.736l-184.31-185.368c26.679-37.72,42.528-83.729,42.528-133.548C460.75,103.35,357.997,0,231.258,0\r\n\t\t\t\t\tC104.518,0,1.765,103.35,1.765,230.82c0,127.47,102.753,230.82,229.493,230.82c49.53,0,95.271-15.944,132.78-42.777\r\n\t\t\t\t\tl184.31,185.366c7.482,7.521,17.292,11.291,27.102,11.291c9.812,0,19.62-3.77,27.083-11.291\r\n\t\t\t\t\tC617.496,589.188,617.496,564.777,602.531,549.736z M355.9,319.763l-15.042,21.273L319.7,356.174\r\n\t\t\t\t\tc-26.083,18.658-56.667,28.526-88.442,28.526c-84.365,0-152.995-69.035-152.995-153.88c0-84.846,68.63-153.88,152.995-153.88\r\n\t\t\t\t\ts152.996,69.034,152.996,153.88C384.271,262.769,374.462,293.526,355.9,319.763z\"/>\r\n\t\t\t</g>\r\n\t\t</g>\r\n\t</g>\r\n</g>\r\n\r\n</svg>\r\n<svg *ngIf=\"name == 'clear'\" version=\"1.1\" id=\"Capa_1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\"\r\n\t viewBox=\"0 0 51.976 51.976\" style=\"enable-background:new 0 0 51.976 51.976;\" xml:space=\"preserve\">\r\n<g>\r\n\t<path d=\"M44.373,7.603c-10.137-10.137-26.632-10.138-36.77,0c-10.138,10.138-10.137,26.632,0,36.77s26.632,10.138,36.77,0\r\n\t\tC54.51,34.235,54.51,17.74,44.373,7.603z M36.241,36.241c-0.781,0.781-2.047,0.781-2.828,0l-7.425-7.425l-7.778,7.778\r\n\t\tc-0.781,0.781-2.047,0.781-2.828,0c-0.781-0.781-0.781-2.047,0-2.828l7.778-7.778l-7.425-7.425c-0.781-0.781-0.781-2.048,0-2.828\r\n\t\tc0.781-0.781,2.047-0.781,2.828,0l7.425,7.425l7.071-7.071c0.781-0.781,2.047-0.781,2.828,0c0.781,0.781,0.781,2.047,0,2.828\r\n\t\tl-7.071,7.071l7.425,7.425C37.022,34.194,37.022,35.46,36.241,36.241z\"/>\r\n</g>\r\n</svg>`,\r\n  encapsulation: ViewEncapsulation.None,\r\n\r\n})\r\n\r\nexport class CIcon { \r\n\r\n    @Input() name:any;\r\n\r\n}","import {\r\n\tComponent,\r\n\tContentChild,\r\n\tElementRef,\r\n\tEventEmitter,\r\n\tInject,\r\n\tOptional,\r\n\tInput,\r\n\tNgModule,\r\n\tNgZone,\r\n\tOnChanges,\r\n\tOnDestroy,\r\n\tOnInit,\r\n\tOutput,\r\n\tRenderer2,\r\n\tViewChild,\r\n\tChangeDetectorRef,\r\n\tInjectionToken\r\n} from '@angular/core';\r\n\r\nimport { PLATFORM_ID } from '@angular/core';\r\nimport { isPlatformServer } from '@angular/common';\r\n\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport * as tween from '@tweenjs/tween.js'\r\nimport { VirtualScrollerDefaultOptions } from './defaultoptions';\r\nimport { IPageInfo } from './ipageinfo';\r\nimport { IViewport } from './iviewport';\r\n\r\nimport { WrapGroupDimensions } from './wrapgroupdimensions';\r\nimport { WrapGroupDimension } from './wrapgroupdimension';\r\n\r\nimport { IDimensions } from './idimension';\r\n\r\n \r\n\r\n\r\n\r\nexport function VIRTUAL_SCROLLER_DEFAULT_OPTIONS_FACTORY(): VirtualScrollerDefaultOptions {\r\n\treturn {\r\n\t\tscrollThrottlingTime: 0,\r\n\t\tscrollDebounceTime: 0,\r\n\t\tscrollAnimationTime: 750,\r\n\t\tcheckResizeInterval: 1000,\r\n\t\tresizeBypassRefreshThreshold: 5,\r\n\t\tmodifyOverflowStyleOfParentScroll: true,\r\n\t\tstripedTable: false\r\n\t};\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n@Component({\r\n\tselector: 'virtual-scroller,[virtualScroller]',\r\n\texportAs: 'virtualScroller',\r\n\ttemplate: `\r\n    <div class=\"total-padding\" #invisiblePadding></div>\r\n    <div class=\"scrollable-content\" #content>\r\n      <ng-content></ng-content>\r\n    </div>\r\n  `,\r\n\thost: {\r\n\t\t'[class.horizontal]': \"horizontal\",\r\n\t\t'[class.vertical]': \"!horizontal\",\r\n\t\t'[class.selfScroll]': \"!parentScroll\"\r\n\t},\r\n\tstyles: [`\r\n    :host {\r\n      position: relative;\r\n\t  display: block;\r\n      -webkit-overflow-scrolling: touch;\r\n    }\r\n\t\r\n\t:host.horizontal.selfScroll {\r\n      overflow-y: visible;\r\n      overflow-x: auto;\r\n\t}\r\n\t:host.vertical.selfScroll {\r\n      overflow-y: auto;\r\n      overflow-x: visible;\r\n\t}\r\n\t\r\n    .scrollable-content {\r\n      top: 0;\r\n      left: 0;\r\n      width: 100%;\r\n      height: 100%;\r\n      max-width: 100vw;\r\n      max-height: 100vh;\r\n      position: absolute;\r\n    }\r\n\r\n\t.scrollable-content ::ng-deep > * {\r\n\t\tbox-sizing: border-box;\r\n\t}\r\n\t\r\n\t:host.horizontal {\r\n\t\twhite-space: nowrap;\r\n\t}\r\n\t\r\n\t:host.horizontal .scrollable-content {\r\n\t\tdisplay: flex;\r\n\t}\r\n\t\r\n\t:host.horizontal .scrollable-content ::ng-deep > * {\r\n\t\tflex-shrink: 0;\r\n\t\tflex-grow: 0;\r\n\t\twhite-space: initial;\r\n\t}\r\n\t\r\n    .total-padding {\r\n      width: 1px;\r\n      opacity: 0;\r\n    }\r\n    \r\n    :host.horizontal .total-padding {\r\n      height: 100%;\r\n    }\r\n  `]\r\n})\r\nexport class VirtualScrollerComponent implements OnInit, OnChanges, OnDestroy {\r\n\tpublic viewPortItems: any[];\r\n\tpublic window = window;\r\n\r\n\tpublic get viewPortInfo(): IPageInfo {\r\n\t\tlet pageInfo: IViewport = this.previousViewPort || <any>{};\r\n\t\treturn {\r\n\t\t\tstartIndex: pageInfo.startIndex || 0,\r\n\t\t\tendIndex: pageInfo.endIndex || 0,\r\n\t\t\tscrollStartPosition: pageInfo.scrollStartPosition || 0,\r\n\t\t\tscrollEndPosition: pageInfo.scrollEndPosition || 0,\r\n\t\t\tmaxScrollPosition: pageInfo.maxScrollPosition || 0,\r\n\t\t\tstartIndexWithBuffer: pageInfo.startIndexWithBuffer || 0,\r\n\t\t\tendIndexWithBuffer: pageInfo.endIndexWithBuffer || 0\r\n\t\t};\r\n\t}\r\n\r\n\t@Input()\r\n\tpublic executeRefreshOutsideAngularZone: boolean = false;\r\n\r\n\tprotected _enableUnequalChildrenSizes: boolean = false;\r\n\t@Input()\r\n\tpublic get enableUnequalChildrenSizes(): boolean {\r\n\t\treturn this._enableUnequalChildrenSizes;\r\n\t}\r\n\tpublic set enableUnequalChildrenSizes(value: boolean) {\r\n\t\tif (this._enableUnequalChildrenSizes === value) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis._enableUnequalChildrenSizes = value;\r\n\t\tthis.minMeasuredChildWidth = undefined;\r\n\t\tthis.minMeasuredChildHeight = undefined;\r\n\t}\r\n\r\n\t@Input()\r\n\tpublic useMarginInsteadOfTranslate: boolean = false;\r\n\r\n\t@Input()\r\n\tpublic modifyOverflowStyleOfParentScroll: boolean;\r\n\r\n\t@Input()\r\n\tpublic stripedTable: boolean;\r\n\r\n\t@Input()\r\n\tpublic scrollbarWidth: number;\r\n\r\n\t@Input()\r\n\tpublic scrollbarHeight: number;\r\n\r\n\t@Input()\r\n\tpublic childWidth: number;\r\n\r\n\t@Input()\r\n\tpublic childHeight: number;\r\n\r\n\t@Input()\r\n\tpublic ssrChildWidth: number;\r\n\r\n\t@Input()\r\n\tpublic ssrChildHeight: number;\r\n\r\n\t@Input()\r\n\tpublic ssrViewportWidth: number = 1920;\r\n\r\n\t@Input()\r\n\tpublic ssrViewportHeight: number = 1080;\r\n\r\n\tprotected _bufferAmount: number = 0;\r\n\t@Input()\r\n\tpublic get bufferAmount(): number {\r\n\t\tif (typeof (this._bufferAmount) === 'number' && this._bufferAmount >= 0) {\r\n\t\t\treturn this._bufferAmount;\r\n\t\t} else {\r\n\t\t\treturn this.enableUnequalChildrenSizes ? 5 : 0;\t\r\n\t\t}\r\n\t}\r\n\tpublic set bufferAmount(value: number) {\r\n\t\tthis._bufferAmount = value;\r\n\t}\r\n\r\n\t@Input()\r\n\tpublic scrollAnimationTime: number;\r\n\r\n\t@Input()\r\n\tpublic resizeBypassRefreshThreshold: number;\r\n\r\n\tprotected _scrollThrottlingTime: number;\r\n\t@Input()\r\n\tpublic get scrollThrottlingTime(): number {\r\n\t\treturn this._scrollThrottlingTime;\r\n\t}\r\n\tpublic set scrollThrottlingTime(value: number) {\r\n\t\tthis._scrollThrottlingTime = value;\r\n\t\tthis.updateOnScrollFunction();\r\n\t}\r\n\r\n\tprotected _scrollDebounceTime: number;\r\n\t@Input()\r\n\tpublic get scrollDebounceTime(): number {\r\n\t\treturn this._scrollDebounceTime;\r\n\t}\r\n\tpublic set scrollDebounceTime(value: number) {\r\n\t\tthis._scrollDebounceTime = value;\r\n\t\tthis.updateOnScrollFunction();\r\n\t}\r\n\r\n\tprotected onScroll: () => void;\r\n\tprotected updateOnScrollFunction(): void {\r\n\t\tif (this.scrollDebounceTime) {\r\n\t\t\tthis.onScroll = <any>this.debounce(() => {\r\n\t\t\t\tthis.refresh_internal(false);\r\n\t\t\t}, this.scrollDebounceTime);\r\n\t\t}\r\n\t\telse if (this.scrollThrottlingTime) {\r\n\t\t\tthis.onScroll = <any>this.throttleTrailing(() => {\r\n\t\t\t\tthis.refresh_internal(false);\r\n\t\t\t}, this.scrollThrottlingTime);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.onScroll = () => {\r\n\t\t\t\tthis.refresh_internal(false);\r\n\t\t\t};\r\n\t\t}\r\n\t}\r\n\r\n\tprotected checkScrollElementResizedTimer: number;\r\n\tprotected _checkResizeInterval: number;\r\n\t@Input()\r\n\tpublic get checkResizeInterval(): number {\r\n\t\treturn this._checkResizeInterval;\r\n\t}\r\n\tpublic set checkResizeInterval(value: number) {\r\n\t\tif (this._checkResizeInterval === value) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis._checkResizeInterval = value;\r\n\t\tthis.addScrollEventHandlers();\r\n\t}\r\n\r\n\tprotected _items: any[] = [];\r\n\t@Input()\r\n\tpublic get items(): any[] {\r\n\t\treturn this._items;\r\n\t}\r\n\tpublic set items(value: any[]) {\r\n\t\tif (value === this._items) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis._items = value || [];\r\n\t\tthis.refresh_internal(true);\r\n\t}\r\n\r\n\t@Input()\r\n\tpublic compareItems: (item1: any, item2: any) => boolean = (item1: any, item2: any) => item1 === item2;\r\n\r\n\tprotected _horizontal: boolean;\r\n\t@Input()\r\n\tpublic get horizontal(): boolean {\r\n\t\treturn this._horizontal;\r\n\t}\r\n\tpublic set horizontal(value: boolean) {\r\n\t\tthis._horizontal = value;\r\n\t\tthis.updateDirection();\r\n\t}\r\n\r\n\tprotected revertParentOverscroll(): void {\r\n\t\tconst scrollElement = this.getScrollElement();\r\n\t\tif (scrollElement && this.oldParentScrollOverflow) {\r\n\t\t\tscrollElement.style['overflow-y'] = this.oldParentScrollOverflow.y;\r\n\t\t\tscrollElement.style['overflow-x'] = this.oldParentScrollOverflow.x;\r\n\t\t}\r\n\r\n\t\tthis.oldParentScrollOverflow = undefined;\r\n\t}\r\n\r\n\tprotected oldParentScrollOverflow: { x: string, y: string };\r\n\tprotected _parentScroll: Element | Window;\r\n\t@Input()\r\n\tpublic get parentScroll(): Element | Window {\r\n\t\treturn this._parentScroll;\r\n\t}\r\n\tpublic set parentScroll(value: Element | Window) {\r\n\t\tif (this._parentScroll === value) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis.revertParentOverscroll();\r\n\t\tthis._parentScroll = value;\r\n\t\tthis.addScrollEventHandlers();\r\n\r\n\t\tconst scrollElement = this.getScrollElement();\r\n\t\tif (this.modifyOverflowStyleOfParentScroll && scrollElement !== this.element.nativeElement) {\r\n\t\t\tthis.oldParentScrollOverflow = { x: scrollElement.style['overflow-x'], y: scrollElement.style['overflow-y'] };\r\n\t\t\tscrollElement.style['overflow-y'] = this.horizontal ? 'visible' : 'auto';\r\n\t\t\tscrollElement.style['overflow-x'] = this.horizontal ? 'auto' : 'visible';\r\n\t\t}\r\n\t}\r\n\r\n\t@Output()\r\n\tpublic vsUpdate: EventEmitter<any[]> = new EventEmitter<any[]>();\r\n\r\n\t@Output()\r\n\tpublic vsChange: EventEmitter<IPageInfo> = new EventEmitter<IPageInfo>();\r\n\r\n\t@Output()\r\n\tpublic vsStart: EventEmitter<IPageInfo> = new EventEmitter<IPageInfo>();\r\n\r\n\t@Output()\r\n\tpublic vsEnd: EventEmitter<IPageInfo> = new EventEmitter<IPageInfo>();\r\n\r\n\t@ViewChild('content', { read: ElementRef, static: false })\r\n\tprotected contentElementRef: ElementRef;\r\n\r\n\t@ViewChild('invisiblePadding', { read: ElementRef, static: false })\r\n\tprotected invisiblePaddingElementRef: ElementRef;\r\n\r\n\t@ContentChild('header', { read: ElementRef, static: false })\r\n\tprotected headerElementRef: ElementRef;\r\n\r\n\t@ContentChild('container', { read: ElementRef, static: false })\r\n\tprotected containerElementRef: ElementRef;\r\n\r\n\tpublic ngOnInit(): void {\r\n\t\tthis.addScrollEventHandlers();\r\n\t}\r\n\r\n\tpublic ngOnDestroy(): void {\r\n\t\tthis.removeScrollEventHandlers();\r\n\t\tthis.revertParentOverscroll();\r\n\t}\r\n\r\n\tpublic ngOnChanges(changes: any): void {\r\n\t\tlet indexLengthChanged = this.cachedItemsLength !== this.items.length;\r\n\t\tthis.cachedItemsLength = this.items.length;\r\n\r\n\t\tconst firstRun: boolean = !changes.items || !changes.items.previousValue || changes.items.previousValue.length === 0;\r\n\t\tthis.refresh_internal(indexLengthChanged || firstRun);\r\n\t}\r\n\r\n\t\r\n\tpublic ngDoCheck(): void {\r\n\t\tif (this.cachedItemsLength !== this.items.length) {\r\n\t\t\tthis.cachedItemsLength = this.items.length;\r\n\t\t\tthis.refresh_internal(true);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t\r\n\t\tif (this.previousViewPort && this.viewPortItems && this.viewPortItems.length > 0) {\r\n\t\t\tlet itemsArrayChanged = false;\r\n\t\t\tfor (let i = 0; i < this.viewPortItems.length; ++i) {\r\n\t\t\t\tif (!this.compareItems(this.items[this.previousViewPort.startIndexWithBuffer + i], this.viewPortItems[i])) {\r\n\t\t\t\t\titemsArrayChanged = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (itemsArrayChanged) {\r\n\t\t\t\tthis.refresh_internal(true);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tpublic refresh(): void {\r\n\t\tthis.refresh_internal(true);\r\n\t}\r\n\r\n\tpublic invalidateAllCachedMeasurements(): void {\r\n\t\tthis.wrapGroupDimensions = {\r\n\t\t\tmaxChildSizePerWrapGroup: [],\r\n\t\t\tnumberOfKnownWrapGroupChildSizes: 0,\r\n\t\t\tsumOfKnownWrapGroupChildWidths: 0,\r\n\t\t\tsumOfKnownWrapGroupChildHeights: 0\r\n\t\t};\r\n\r\n\t\tthis.minMeasuredChildWidth = undefined;\r\n\t\tthis.minMeasuredChildHeight = undefined;\r\n\r\n\t\tthis.refresh_internal(false);\r\n\t}\r\n\r\n\tpublic invalidateCachedMeasurementForItem(item: any): void {\r\n\t\tif (this.enableUnequalChildrenSizes) {\r\n\t\t\tlet index = this.items && this.items.indexOf(item);\r\n\t\t\tif (index >= 0) {\r\n\t\t\t\tthis.invalidateCachedMeasurementAtIndex(index);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tthis.minMeasuredChildWidth = undefined;\r\n\t\t\tthis.minMeasuredChildHeight = undefined;\r\n\t\t}\r\n\r\n\t\tthis.refresh_internal(false);\r\n\t}\r\n\r\n\tpublic invalidateCachedMeasurementAtIndex(index: number): void {\r\n\t\tif (this.enableUnequalChildrenSizes) {\r\n\t\t\tlet cachedMeasurement = this.wrapGroupDimensions.maxChildSizePerWrapGroup[index];\r\n\t\t\tif (cachedMeasurement) {\r\n\t\t\t\tthis.wrapGroupDimensions.maxChildSizePerWrapGroup[index] = undefined;\r\n\t\t\t\t--this.wrapGroupDimensions.numberOfKnownWrapGroupChildSizes;\r\n\t\t\t\tthis.wrapGroupDimensions.sumOfKnownWrapGroupChildWidths -= cachedMeasurement.childWidth || 0;\r\n\t\t\t\tthis.wrapGroupDimensions.sumOfKnownWrapGroupChildHeights -= cachedMeasurement.childHeight || 0;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tthis.minMeasuredChildWidth = undefined;\r\n\t\t\tthis.minMeasuredChildHeight = undefined;\r\n\t\t}\r\n\r\n\t\tthis.refresh_internal(false);\r\n\t}\r\n\r\n\tpublic scrollInto(item: any, alignToBeginning: boolean = true, additionalOffset: number = 0, animationMilliseconds: number = undefined, animationCompletedCallback: () => void = undefined): void {\r\n\t\tlet index: number = this.items.indexOf(item);\r\n\t\tif (index === -1) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis.scrollToIndex(index, alignToBeginning, additionalOffset, animationMilliseconds, animationCompletedCallback);\r\n\t}\r\n\r\n\tpublic scrollToIndex(index: number, alignToBeginning: boolean = true, additionalOffset: number = 0, animationMilliseconds: number = undefined, animationCompletedCallback: () => void = undefined): void {\r\n\t\tlet maxRetries: number = 5;\r\n\r\n\t\tlet retryIfNeeded = () => {\r\n\t\t\t--maxRetries;\r\n\t\t\tif (maxRetries <= 0) {\r\n\t\t\t\tif (animationCompletedCallback) {\r\n\t\t\t\t\tanimationCompletedCallback();\r\n\t\t\t\t}\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tlet dimensions = this.calculateDimensions();\r\n\t\t\tlet desiredStartIndex = Math.min(Math.max(index, 0), dimensions.itemCount - 1);\r\n\t\t\tif (this.previousViewPort.startIndex === desiredStartIndex) {\r\n\t\t\t\tif (animationCompletedCallback) {\r\n\t\t\t\t\tanimationCompletedCallback();\r\n\t\t\t\t}\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tthis.scrollToIndex_internal(index, alignToBeginning, additionalOffset, 0, retryIfNeeded);\r\n\t\t};\r\n\r\n\t\tthis.scrollToIndex_internal(index, alignToBeginning, additionalOffset, animationMilliseconds, retryIfNeeded);\r\n\t}\r\n\r\n\tprotected scrollToIndex_internal(index: number, alignToBeginning: boolean = true, additionalOffset: number = 0, animationMilliseconds: number = undefined, animationCompletedCallback: () => void = undefined): void {\r\n\t\tanimationMilliseconds = animationMilliseconds === undefined ? this.scrollAnimationTime : animationMilliseconds;\r\n\r\n\t\tlet dimensions = this.calculateDimensions();\r\n\t\tlet scroll = this.calculatePadding(index, dimensions) + additionalOffset;\r\n\t\tif (!alignToBeginning) {\r\n\t\t\tscroll -= dimensions.wrapGroupsPerPage * dimensions[this._childScrollDim];\r\n\t\t}\r\n\r\n\t\tthis.scrollToPosition(scroll, animationMilliseconds, animationCompletedCallback);\r\n\t}\r\n\r\n\tpublic scrollToPosition(scrollPosition: number, animationMilliseconds: number = undefined, animationCompletedCallback: () => void = undefined): void {\r\n\t\tscrollPosition += this.getElementsOffset();\r\n\r\n\t\tanimationMilliseconds = animationMilliseconds === undefined ? this.scrollAnimationTime : animationMilliseconds;\r\n\r\n\t\tlet scrollElement = this.getScrollElement();\r\n\r\n\t\tlet animationRequest: number;\r\n\r\n\t\tif (this.currentTween) {\r\n\t\t\tthis.currentTween.stop();\r\n\t\t\tthis.currentTween = undefined;\r\n\t\t}\r\n\r\n\t\tif (!animationMilliseconds) {\r\n\t\t\tthis.renderer.setProperty(scrollElement, this._scrollType, scrollPosition);\r\n\t\t\tthis.refresh_internal(false, animationCompletedCallback);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst tweenConfigObj = { scrollPosition: scrollElement[this._scrollType] };\r\n\r\n\t\tlet newTween = new tween.Tween(tweenConfigObj)\r\n\t\t\t.to({ scrollPosition }, animationMilliseconds)\r\n\t\t\t.easing(tween.Easing.Quadratic.Out)\r\n\t\t\t.onUpdate((data) => {\r\n\t\t\t\tif (isNaN(data.scrollPosition)) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tthis.renderer.setProperty(scrollElement, this._scrollType, data.scrollPosition);\r\n\t\t\t\tthis.refresh_internal(false);\r\n\t\t\t})\r\n\t\t\t.onStop(() => {\r\n\t\t\t\tcancelAnimationFrame(animationRequest);\r\n\t\t\t})\r\n\t\t\t.start();\r\n\r\n\t\tconst animate = (time?: number) => {\r\n\t\t\tif (!newTween[\"isPlaying\"]()) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tnewTween.update(time);\r\n\t\t\tif (tweenConfigObj.scrollPosition === scrollPosition) {\r\n\t\t\t\tthis.refresh_internal(false, animationCompletedCallback);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tthis.zone.runOutsideAngular(() => {\r\n\t\t\t\tanimationRequest = requestAnimationFrame(animate);\r\n\t\t\t});\r\n\t\t};\r\n\r\n\t\tanimate();\r\n\t\tthis.currentTween = newTween;\r\n\t}\r\n\r\n\tprotected isAngularUniversalSSR: boolean;\r\n\r\n\tconstructor(protected readonly element: ElementRef,\r\n\t\tprotected readonly renderer: Renderer2,\r\n\t\tprotected readonly zone: NgZone,\r\n\t\tprotected changeDetectorRef: ChangeDetectorRef,\r\n\t\t@Inject(PLATFORM_ID) platformId: Object,\r\n\t\t@Optional() @Inject('virtual-scroller-default-options')\r\n\t\toptions: VirtualScrollerDefaultOptions) {\r\n\t\t\t\r\n\t\tthis.isAngularUniversalSSR = isPlatformServer(platformId);\r\n\r\n\t\tthis.scrollThrottlingTime = options.scrollThrottlingTime;\r\n\t\tthis.scrollDebounceTime = options.scrollDebounceTime;\r\n\t\tthis.scrollAnimationTime = options.scrollAnimationTime;\r\n\t\tthis.scrollbarWidth = options.scrollbarWidth;\r\n\t\tthis.scrollbarHeight = options.scrollbarHeight;\r\n\t\tthis.checkResizeInterval = options.checkResizeInterval;\r\n\t\tthis.resizeBypassRefreshThreshold = options.resizeBypassRefreshThreshold;\r\n\t\tthis.modifyOverflowStyleOfParentScroll = options.modifyOverflowStyleOfParentScroll;\r\n\t\tthis.stripedTable = options.stripedTable;\r\n\r\n\t\tthis.horizontal = false;\r\n\t\tthis.resetWrapGroupDimensions();\r\n\t}\r\n\t\r\n\tprotected getElementSize(element: HTMLElement) : ClientRect {\r\n\t\tlet result = element.getBoundingClientRect();\r\n\t\tlet styles = getComputedStyle(element);\r\n\t\tlet marginTop = parseInt(styles['margin-top'], 10) || 0;\r\n\t\tlet marginBottom = parseInt(styles['margin-bottom'], 10) || 0;\r\n\t\tlet marginLeft = parseInt(styles['margin-left'], 10) || 0;\r\n\t\tlet marginRight = parseInt(styles['margin-right'], 10) || 0;\r\n\t\t\r\n\t\treturn {\r\n\t\t\ttop: result.top + marginTop,\r\n\t\t\tbottom: result.bottom + marginBottom,\r\n\t\t\tleft: result.left + marginLeft,\r\n\t\t\tright: result.right + marginRight,\r\n\t\t\twidth: result.width + marginLeft + marginRight,\r\n\t\t\theight: result.height + marginTop + marginBottom\r\n\t\t};\r\n\t}\r\n\r\n\tprotected previousScrollBoundingRect: ClientRect;\r\n\tprotected checkScrollElementResized(): void {\r\n\t\tlet boundingRect = this.getElementSize(this.getScrollElement());\r\n\r\n\t\tlet sizeChanged: boolean;\r\n\t\tif (!this.previousScrollBoundingRect) {\r\n\t\t\tsizeChanged = true;\r\n\t\t} else {\r\n\t\t\tlet widthChange = Math.abs(boundingRect.width - this.previousScrollBoundingRect.width);\r\n\t\t\tlet heightChange = Math.abs(boundingRect.height - this.previousScrollBoundingRect.height);\r\n\t\t\tsizeChanged = widthChange > this.resizeBypassRefreshThreshold || heightChange > this.resizeBypassRefreshThreshold;\r\n\t\t}\r\n\r\n\t\tif (sizeChanged) {\r\n\t\t\tthis.previousScrollBoundingRect = boundingRect;\r\n\t\t\tif (boundingRect.width > 0 && boundingRect.height > 0) {\r\n\t\t\t\tthis.refresh_internal(false);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprotected _invisiblePaddingProperty;\r\n\tprotected _offsetType;\r\n\tprotected _scrollType;\r\n\tprotected _pageOffsetType;\r\n\tprotected _childScrollDim;\r\n\tprotected _translateDir;\r\n\tprotected _marginDir;\r\n\tprotected updateDirection(): void {\r\n\t\tif (this.horizontal) {\r\n\t\t\tthis._invisiblePaddingProperty = 'width';\r\n\t\t\tthis._offsetType = 'offsetLeft';\r\n\t\t\tthis._pageOffsetType = 'pageXOffset';\r\n\t\t\tthis._childScrollDim = 'childWidth';\r\n\t\t\tthis._marginDir = 'margin-left';\r\n\t\t\tthis._translateDir = 'translateX';\r\n\t\t\tthis._scrollType = 'scrollLeft';\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis._invisiblePaddingProperty = 'height';\r\n\t\t\tthis._offsetType = 'offsetTop';\r\n\t\t\tthis._pageOffsetType = 'pageYOffset';\r\n\t\t\tthis._childScrollDim = 'childHeight';\r\n\t\t\tthis._marginDir = 'margin-top';\r\n\t\t\tthis._translateDir = 'translateY';\r\n\t\t\tthis._scrollType = 'scrollTop';\r\n\t\t}\r\n\t}\r\n\r\n\tprotected debounce(func: Function, wait: number): Function {\r\n\t\tconst throttled = this.throttleTrailing(func, wait);\r\n\t\tconst result = function () {\r\n\t\t\tthrottled['cancel']();\r\n\t\t\tthrottled.apply(this, arguments);\r\n\t\t};\r\n\t\tresult['cancel'] = function () {\r\n\t\t\tthrottled['cancel']();\r\n\t\t};\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\tprotected throttleTrailing(func: Function, wait: number): Function {\r\n\t\tlet timeout = undefined;\r\n\t\tlet _arguments = arguments;\r\n\t\tconst result = function () {\r\n\t\t\tconst _this = this;\r\n\t\t\t_arguments = arguments\r\n\r\n\t\t\tif (timeout) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif (wait <= 0) {\r\n\t\t\t\tfunc.apply(_this, _arguments);\r\n\t\t\t} else {\r\n\t\t\t\ttimeout = setTimeout(function () {\r\n\t\t\t\t\ttimeout = undefined;\r\n\t\t\t\t\tfunc.apply(_this, _arguments);\r\n\t\t\t\t}, wait);\r\n\t\t\t}\r\n\t\t};\r\n\t\tresult['cancel'] = function () {\r\n\t\t\tif (timeout) {\r\n\t\t\t\tclearTimeout(timeout);\r\n\t\t\t\ttimeout = undefined;\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\tprotected calculatedScrollbarWidth: number = 0;\r\n\tprotected calculatedScrollbarHeight: number = 0;\r\n\r\n\tprotected padding: number = 0;\r\n\tprotected previousViewPort: IViewport = <any>{};\r\n\tprotected currentTween: tween.Tween;\r\n\tprotected cachedItemsLength: number;\r\n\r\n\tprotected disposeScrollHandler: () => void | undefined;\r\n\tprotected disposeResizeHandler: () => void | undefined;\r\n\r\n\tprotected refresh_internal(itemsArrayModified: boolean, refreshCompletedCallback: () => void = undefined, maxRunTimes: number = 2): void {\r\n\t\t//note: maxRunTimes is to force it to keep recalculating if the previous iteration caused a re-render (different sliced items in viewport or scrollPosition changed).\r\n\t\t//The default of 2x max will probably be accurate enough without causing too large a performance bottleneck\r\n\t\t//The code would typically quit out on the 2nd iteration anyways. The main time it'd think more than 2 runs would be necessary would be for vastly different sized child items or if this is the 1st time the items array was initialized.\r\n\t\t//Without maxRunTimes, If the user is actively scrolling this code would become an infinite loop until they stopped scrolling. This would be okay, except each scroll event would start an additional infinte loop. We want to short-circuit it to prevent this.\r\n\r\n\t\tif (itemsArrayModified && this.previousViewPort && this.previousViewPort.scrollStartPosition > 0) {\r\n\t\t//if items were prepended, scroll forward to keep same items visible\r\n\t\t\tlet oldViewPort = this.previousViewPort;\r\n\t\t\tlet oldViewPortItems = this.viewPortItems;\r\n\t\t\t\r\n\t\t\tlet oldRefreshCompletedCallback = refreshCompletedCallback;\r\n\t\t\trefreshCompletedCallback = () => {\r\n\t\t\t\tlet scrollLengthDelta = this.previousViewPort.scrollLength - oldViewPort.scrollLength;\r\n\t\t\t\tif (scrollLengthDelta > 0 && this.viewPortItems) {\r\n\t\t\t\t\tlet oldStartItem = oldViewPortItems[0];\r\n\t\t\t\t\tlet oldStartItemIndex = this.items.findIndex(x => this.compareItems(oldStartItem, x));\r\n\t\t\t\t\tif (oldStartItemIndex > this.previousViewPort.startIndexWithBuffer) {\r\n\t\t\t\t\t\tlet itemOrderChanged = false;\r\n\t\t\t\t\t\tfor (let i = 1; i < this.viewPortItems.length; ++i) {\r\n\t\t\t\t\t\t\tif (!this.compareItems(this.items[oldStartItemIndex + i], oldViewPortItems[i])) {\r\n\t\t\t\t\t\t\t\titemOrderChanged = true;\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tif (!itemOrderChanged) {\r\n\t\t\t\t\t\t\tthis.scrollToPosition(this.previousViewPort.scrollStartPosition + scrollLengthDelta , 0, oldRefreshCompletedCallback);\r\n\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tif (oldRefreshCompletedCallback) {\r\n\t\t\t\t\toldRefreshCompletedCallback();\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t}\t\t\t\r\n\r\n\t\tthis.zone.runOutsideAngular(() => {\r\n\t\t\trequestAnimationFrame(() => {\r\n\r\n\t\t\t\tif (itemsArrayModified) {\r\n\t\t\t\t\tthis.resetWrapGroupDimensions();\r\n\t\t\t\t}\r\n\t\t\t\tlet viewport = this.calculateViewport();\r\n\r\n\t\t\t\tlet startChanged = itemsArrayModified || viewport.startIndex !== this.previousViewPort.startIndex;\r\n\t\t\t\tlet endChanged = itemsArrayModified || viewport.endIndex !== this.previousViewPort.endIndex;\r\n\t\t\t\tlet scrollLengthChanged = viewport.scrollLength !== this.previousViewPort.scrollLength;\r\n\t\t\t\tlet paddingChanged = viewport.padding !== this.previousViewPort.padding;\r\n\t\t\t\tlet scrollPositionChanged = viewport.scrollStartPosition !== this.previousViewPort.scrollStartPosition || viewport.scrollEndPosition !== this.previousViewPort.scrollEndPosition || viewport.maxScrollPosition !== this.previousViewPort.maxScrollPosition;\r\n\r\n\t\t\t\tthis.previousViewPort = viewport;\r\n\r\n\t\t\t\tif (scrollLengthChanged) {\r\n\t\t\t\t\tthis.renderer.setStyle(this.invisiblePaddingElementRef.nativeElement, this._invisiblePaddingProperty, `${viewport.scrollLength}px`);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (paddingChanged) {\r\n\t\t\t\t\tif (this.useMarginInsteadOfTranslate) {\r\n\t\t\t\t\t\tthis.renderer.setStyle(this.contentElementRef.nativeElement, this._marginDir, `${viewport.padding}px`);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tthis.renderer.setStyle(this.contentElementRef.nativeElement, 'transform', `${this._translateDir}(${viewport.padding}px)`);\r\n\t\t\t\t\t\tthis.renderer.setStyle(this.contentElementRef.nativeElement, 'webkitTransform', `${this._translateDir}(${viewport.padding}px)`);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (this.headerElementRef) {\r\n\t\t\t\t\tlet scrollPosition = this.getScrollElement()[this._scrollType];\r\n\t\t\t\t\tlet containerOffset = this.getElementsOffset();\r\n\t\t\t\t\tlet offset = Math.max(scrollPosition - viewport.padding - containerOffset + this.headerElementRef.nativeElement.clientHeight, 0);\r\n\t\t\t\t\tthis.renderer.setStyle(this.headerElementRef.nativeElement, 'transform', `${this._translateDir}(${offset}px)`);\r\n\t\t\t\t\tthis.renderer.setStyle(this.headerElementRef.nativeElement, 'webkitTransform', `${this._translateDir}(${offset}px)`);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst changeEventArg: IPageInfo = (startChanged || endChanged) ? {\r\n\t\t\t\t\tstartIndex: viewport.startIndex,\r\n\t\t\t\t\tendIndex: viewport.endIndex,\r\n\t\t\t\t\tscrollStartPosition: viewport.scrollStartPosition,\r\n\t\t\t\t\tscrollEndPosition: viewport.scrollEndPosition,\r\n\t\t\t\t\tstartIndexWithBuffer: viewport.startIndexWithBuffer,\r\n\t\t\t\t\tendIndexWithBuffer: viewport.endIndexWithBuffer,\r\n\t\t\t\t\tmaxScrollPosition: viewport.maxScrollPosition\r\n\t\t\t\t} : undefined;\r\n\r\n\r\n\t\t\t\tif (startChanged || endChanged || scrollPositionChanged) {\r\n\t\t\t\t\tconst handleChanged = () => {\r\n\t\t\t\t\t\t// update the scroll list to trigger re-render of components in viewport\r\n\t\t\t\t\t\tthis.viewPortItems = viewport.startIndexWithBuffer >= 0 && viewport.endIndexWithBuffer >= 0 ? this.items.slice(viewport.startIndexWithBuffer, viewport.endIndexWithBuffer + 1) : [];\r\n\t\t\t\t\t\tthis.vsUpdate.emit(this.viewPortItems);\r\n\r\n\t\t\t\t\t\tif (startChanged) {\r\n\t\t\t\t\t\t\tthis.vsStart.emit(changeEventArg);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif (endChanged) {\r\n\t\t\t\t\t\t\tthis.vsEnd.emit(changeEventArg);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif (startChanged || endChanged) {\r\n\t\t\t\t\t\t\tthis.changeDetectorRef.markForCheck();\r\n\t\t\t\t\t\t\tthis.vsChange.emit(changeEventArg);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif (maxRunTimes > 0) {\r\n\t\t\t\t\t\t\tthis.refresh_internal(false, refreshCompletedCallback, maxRunTimes - 1);\r\n\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif (refreshCompletedCallback) {\r\n\t\t\t\t\t\t\trefreshCompletedCallback();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t};\r\n\r\n\r\n\t\t\t\t\tif (this.executeRefreshOutsideAngularZone) {\r\n\t\t\t\t\t\thandleChanged();\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tthis.zone.run(handleChanged);\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif (maxRunTimes > 0 && (scrollLengthChanged || paddingChanged)) {\r\n\t\t\t\t\t\tthis.refresh_internal(false, refreshCompletedCallback, maxRunTimes - 1);\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (refreshCompletedCallback) {\r\n\t\t\t\t\t\trefreshCompletedCallback();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n\tprotected getScrollElement(): HTMLElement {\r\n\t\treturn this.parentScroll instanceof Window ? document.scrollingElement || document.documentElement || document.body : this.parentScroll || this.element.nativeElement;\r\n\t}\r\n\r\n\tprotected addScrollEventHandlers(): void {\r\n\t\tif (this.isAngularUniversalSSR) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tlet scrollElement = this.getScrollElement();\r\n\r\n\t\tthis.removeScrollEventHandlers();\r\n\r\n\t\tthis.zone.runOutsideAngular(() => {\r\n\t\t\tif (this.parentScroll instanceof Window) {\r\n\t\t\t\tthis.disposeScrollHandler = this.renderer.listen('window', 'scroll', this.onScroll);\r\n\t\t\t\tthis.disposeResizeHandler = this.renderer.listen('window', 'resize', this.onScroll);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.disposeScrollHandler = this.renderer.listen(scrollElement, 'scroll', this.onScroll);\r\n\t\t\t\tif (this._checkResizeInterval > 0) {\r\n\t\t\t\t\tthis.checkScrollElementResizedTimer = <any>setInterval(() => { this.checkScrollElementResized(); }, this._checkResizeInterval);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tprotected removeScrollEventHandlers(): void {\r\n\t\tif (this.checkScrollElementResizedTimer) {\r\n\t\t\tclearInterval(this.checkScrollElementResizedTimer);\r\n\t\t}\r\n\r\n\t\tif (this.disposeScrollHandler) {\r\n\t\t\tthis.disposeScrollHandler();\r\n\t\t\tthis.disposeScrollHandler = undefined;\r\n\t\t}\r\n\r\n\t\tif (this.disposeResizeHandler) {\r\n\t\t\tthis.disposeResizeHandler();\r\n\t\t\tthis.disposeResizeHandler = undefined;\r\n\t\t}\r\n\t}\r\n\r\n\tprotected getElementsOffset(): number {\r\n\t\tif (this.isAngularUniversalSSR) {\r\n\t\t\treturn 0;\r\n\t\t}\r\n\r\n\t\tlet offset = 0;\r\n\r\n\t\tif (this.containerElementRef && this.containerElementRef.nativeElement) {\r\n\t\t\toffset += this.containerElementRef.nativeElement[this._offsetType];\r\n\t\t}\r\n\r\n\t\tif (this.parentScroll) {\r\n\t\t\tlet scrollElement = this.getScrollElement();\r\n\t\t\tlet elementClientRect = this.getElementSize(this.element.nativeElement);\r\n\t\t\tlet scrollClientRect = this.getElementSize(scrollElement);\r\n\t\t\tif (this.horizontal) {\r\n\t\t\t\toffset += elementClientRect.left - scrollClientRect.left;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\toffset += elementClientRect.top - scrollClientRect.top;\r\n\t\t\t}\r\n\r\n\t\t\tif (!(this.parentScroll instanceof Window)) {\r\n\t\t\t\toffset += scrollElement[this._scrollType];\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn offset;\r\n\t}\r\n\r\n\tprotected countItemsPerWrapGroup(): number {\r\n\t\tif (this.isAngularUniversalSSR) {\r\n\t\t\treturn Math.round(this.horizontal ? this.ssrViewportHeight / this.ssrChildHeight : this.ssrViewportWidth / this.ssrChildWidth);\r\n\t\t}\r\n\r\n\t\tlet propertyName = this.horizontal ? 'offsetLeft' : 'offsetTop';\r\n\t\tlet children = ((this.containerElementRef && this.containerElementRef.nativeElement) || this.contentElementRef.nativeElement).children;\r\n\r\n\t\tlet childrenLength = children ? children.length : 0;\r\n\t\tif (childrenLength === 0) {\r\n\t\t\treturn 1;\r\n\t\t}\r\n\r\n\t\tlet firstOffset = children[0][propertyName];\r\n\t\tlet result = 1;\r\n\t\twhile (result < childrenLength && firstOffset === children[result][propertyName]) {\r\n\t\t\t++result;\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\tprotected getScrollStartPosition(): number {\r\n\t\tlet windowScrollValue = undefined;\r\n\t\tif (this.parentScroll instanceof Window) {\r\n\t\t\twindowScrollValue = window[this._pageOffsetType];\r\n\t\t}\r\n\r\n\t\treturn windowScrollValue || this.getScrollElement()[this._scrollType] || 0;\r\n\t}\r\n\r\n\tprotected minMeasuredChildWidth: number;\r\n\tprotected minMeasuredChildHeight: number;\r\n\r\n\tprotected wrapGroupDimensions: WrapGroupDimensions;\r\n\r\n\tprotected resetWrapGroupDimensions(): void {\r\n\t\tconst oldWrapGroupDimensions = this.wrapGroupDimensions;\r\n\t\tthis.invalidateAllCachedMeasurements();\r\n\r\n\t\tif (!this.enableUnequalChildrenSizes || !oldWrapGroupDimensions || oldWrapGroupDimensions.numberOfKnownWrapGroupChildSizes === 0) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst itemsPerWrapGroup: number = this.countItemsPerWrapGroup();\r\n\t\tfor (let wrapGroupIndex = 0; wrapGroupIndex < oldWrapGroupDimensions.maxChildSizePerWrapGroup.length; ++wrapGroupIndex) {\r\n\t\t\tconst oldWrapGroupDimension: WrapGroupDimension = oldWrapGroupDimensions.maxChildSizePerWrapGroup[wrapGroupIndex];\r\n\t\t\tif (!oldWrapGroupDimension || !oldWrapGroupDimension.items || !oldWrapGroupDimension.items.length) {\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\r\n\t\t\tif (oldWrapGroupDimension.items.length !== itemsPerWrapGroup) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tlet itemsChanged = false;\r\n\t\t\tlet arrayStartIndex = itemsPerWrapGroup * wrapGroupIndex;\r\n\t\t\tfor (let i = 0; i < itemsPerWrapGroup; ++i) {\r\n\t\t\t\tif (!this.compareItems(oldWrapGroupDimension.items[i], this.items[arrayStartIndex + i])) {\r\n\t\t\t\t\titemsChanged = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (!itemsChanged) {\r\n\t\t\t\t++this.wrapGroupDimensions.numberOfKnownWrapGroupChildSizes;\r\n\t\t\t\tthis.wrapGroupDimensions.sumOfKnownWrapGroupChildWidths += oldWrapGroupDimension.childWidth || 0;\r\n\t\t\t\tthis.wrapGroupDimensions.sumOfKnownWrapGroupChildHeights += oldWrapGroupDimension.childHeight || 0;\r\n\t\t\t\tthis.wrapGroupDimensions.maxChildSizePerWrapGroup[wrapGroupIndex] = oldWrapGroupDimension;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprotected calculateDimensions(): IDimensions {\r\n\t\tlet scrollElement = this.getScrollElement();\r\n\r\n\t\tconst maxCalculatedScrollBarSize: number = 25; // Note: Formula to auto-calculate doesn't work for ParentScroll, so we default to this if not set by consuming application\r\n\t\tthis.calculatedScrollbarHeight = Math.max(Math.min(scrollElement.offsetHeight - scrollElement.clientHeight, maxCalculatedScrollBarSize), this.calculatedScrollbarHeight);\r\n\t\tthis.calculatedScrollbarWidth = Math.max(Math.min(scrollElement.offsetWidth - scrollElement.clientWidth, maxCalculatedScrollBarSize), this.calculatedScrollbarWidth);\r\n\r\n\t\tlet viewportWidth = scrollElement.offsetWidth - (this.scrollbarWidth || this.calculatedScrollbarWidth || (this.horizontal ? 0 : maxCalculatedScrollBarSize));\r\n\t\tlet viewportHeight = scrollElement.offsetHeight - (this.scrollbarHeight || this.calculatedScrollbarHeight || (this.horizontal ? maxCalculatedScrollBarSize : 0));\r\n\r\n\t\tlet content = (this.containerElementRef && this.containerElementRef.nativeElement) || this.contentElementRef.nativeElement;\r\n\r\n\t\tlet itemsPerWrapGroup = this.countItemsPerWrapGroup();\r\n\t\tlet wrapGroupsPerPage;\r\n\r\n\t\tlet defaultChildWidth;\r\n\t\tlet defaultChildHeight;\r\n\r\n\t\tif (this.isAngularUniversalSSR) {\r\n\t\t\tviewportWidth = this.ssrViewportWidth;\r\n\t\t\tviewportHeight = this.ssrViewportHeight;\r\n\t\t\tdefaultChildWidth = this.ssrChildWidth;\r\n\t\t\tdefaultChildHeight = this.ssrChildHeight;\r\n\t\t\tlet itemsPerRow = Math.max(Math.ceil(viewportWidth / defaultChildWidth), 1);\r\n\t\t\tlet itemsPerCol = Math.max(Math.ceil(viewportHeight / defaultChildHeight), 1);\r\n\t\t\twrapGroupsPerPage = this.horizontal ? itemsPerRow : itemsPerCol;\r\n\t\t}\r\n\t\telse if (!this.enableUnequalChildrenSizes) {\r\n\t\t\tif (content.children.length > 0) {\r\n\t\t\t\tif (!this.childWidth || !this.childHeight) {\r\n\t\t\t\t\tif (!this.minMeasuredChildWidth && viewportWidth > 0) {\r\n\t\t\t\t\t\tthis.minMeasuredChildWidth = viewportWidth;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (!this.minMeasuredChildHeight && viewportHeight > 0) {\r\n\t\t\t\t\t\tthis.minMeasuredChildHeight = viewportHeight;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlet child = content.children[0];\r\n\t\t\t\tlet clientRect = this.getElementSize(child);\r\n\t\t\t\tthis.minMeasuredChildWidth = Math.min(this.minMeasuredChildWidth, clientRect.width);\r\n\t\t\t\tthis.minMeasuredChildHeight = Math.min(this.minMeasuredChildHeight, clientRect.height);\r\n\t\t\t}\r\n\r\n\t\t\tdefaultChildWidth = this.childWidth || this.minMeasuredChildWidth || viewportWidth;\r\n\t\t\tdefaultChildHeight = this.childHeight || this.minMeasuredChildHeight || viewportHeight;\r\n\t\t\tlet itemsPerRow = Math.max(Math.ceil(viewportWidth / defaultChildWidth), 1);\r\n\t\t\tlet itemsPerCol = Math.max(Math.ceil(viewportHeight / defaultChildHeight), 1);\r\n\t\t\twrapGroupsPerPage = this.horizontal ? itemsPerRow : itemsPerCol;\r\n\t\t} else {\r\n\t\t\tlet scrollOffset = scrollElement[this._scrollType] - (this.previousViewPort ? this.previousViewPort.padding : 0);\r\n\r\n\t\t\tlet arrayStartIndex = this.previousViewPort.startIndexWithBuffer || 0;\r\n\t\t\tlet wrapGroupIndex = Math.ceil(arrayStartIndex / itemsPerWrapGroup);\r\n\r\n\t\t\tlet maxWidthForWrapGroup = 0;\r\n\t\t\tlet maxHeightForWrapGroup = 0;\r\n\t\t\tlet sumOfVisibleMaxWidths = 0;\r\n\t\t\tlet sumOfVisibleMaxHeights = 0;\r\n\t\t\twrapGroupsPerPage = 0;\r\n\r\n\t\t\tfor (let i = 0; i < content.children.length; ++i) {\r\n\t\t\t\t++arrayStartIndex;\r\n\t\t\t\tlet child = content.children[i];\r\n\t\t\t\tlet clientRect = this.getElementSize(child);\r\n\r\n\t\t\t\tmaxWidthForWrapGroup = Math.max(maxWidthForWrapGroup, clientRect.width);\r\n\t\t\t\tmaxHeightForWrapGroup = Math.max(maxHeightForWrapGroup, clientRect.height);\r\n\r\n\t\t\t\tif (arrayStartIndex % itemsPerWrapGroup === 0) {\r\n\t\t\t\t\tlet oldValue = this.wrapGroupDimensions.maxChildSizePerWrapGroup[wrapGroupIndex];\r\n\t\t\t\t\tif (oldValue) {\r\n\t\t\t\t\t\t--this.wrapGroupDimensions.numberOfKnownWrapGroupChildSizes;\r\n\t\t\t\t\t\tthis.wrapGroupDimensions.sumOfKnownWrapGroupChildWidths -= oldValue.childWidth || 0;\r\n\t\t\t\t\t\tthis.wrapGroupDimensions.sumOfKnownWrapGroupChildHeights -= oldValue.childHeight || 0;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t++this.wrapGroupDimensions.numberOfKnownWrapGroupChildSizes;\r\n\t\t\t\t\tconst items = this.items.slice(arrayStartIndex - itemsPerWrapGroup, arrayStartIndex);\r\n\t\t\t\t\tthis.wrapGroupDimensions.maxChildSizePerWrapGroup[wrapGroupIndex] = {\r\n\t\t\t\t\t\tchildWidth: maxWidthForWrapGroup,\r\n\t\t\t\t\t\tchildHeight: maxHeightForWrapGroup,\r\n\t\t\t\t\t\titems: items\r\n\t\t\t\t\t};\r\n\t\t\t\t\tthis.wrapGroupDimensions.sumOfKnownWrapGroupChildWidths += maxWidthForWrapGroup;\r\n\t\t\t\t\tthis.wrapGroupDimensions.sumOfKnownWrapGroupChildHeights += maxHeightForWrapGroup;\r\n\r\n\t\t\t\t\tif (this.horizontal) {\r\n\t\t\t\t\t\tlet maxVisibleWidthForWrapGroup = Math.min(maxWidthForWrapGroup, Math.max(viewportWidth - sumOfVisibleMaxWidths, 0));\r\n\t\t\t\t\t\tif (scrollOffset > 0) {\r\n\t\t\t\t\t\t\tlet scrollOffsetToRemove = Math.min(scrollOffset, maxVisibleWidthForWrapGroup);\r\n\t\t\t\t\t\t\tmaxVisibleWidthForWrapGroup -= scrollOffsetToRemove;\r\n\t\t\t\t\t\t\tscrollOffset -= scrollOffsetToRemove;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tsumOfVisibleMaxWidths += maxVisibleWidthForWrapGroup;\r\n\t\t\t\t\t\tif (maxVisibleWidthForWrapGroup > 0 && viewportWidth >= sumOfVisibleMaxWidths) {\r\n\t\t\t\t\t\t\t++wrapGroupsPerPage;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tlet maxVisibleHeightForWrapGroup = Math.min(maxHeightForWrapGroup, Math.max(viewportHeight - sumOfVisibleMaxHeights, 0));\r\n\t\t\t\t\t\tif (scrollOffset > 0) {\r\n\t\t\t\t\t\t\tlet scrollOffsetToRemove = Math.min(scrollOffset, maxVisibleHeightForWrapGroup);\r\n\t\t\t\t\t\t\tmaxVisibleHeightForWrapGroup -= scrollOffsetToRemove;\r\n\t\t\t\t\t\t\tscrollOffset -= scrollOffsetToRemove;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tsumOfVisibleMaxHeights += maxVisibleHeightForWrapGroup;\r\n\t\t\t\t\t\tif (maxVisibleHeightForWrapGroup > 0 && viewportHeight >= sumOfVisibleMaxHeights) {\r\n\t\t\t\t\t\t\t++wrapGroupsPerPage;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t++wrapGroupIndex;\r\n\r\n\t\t\t\t\tmaxWidthForWrapGroup = 0;\r\n\t\t\t\t\tmaxHeightForWrapGroup = 0;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tlet averageChildWidth = this.wrapGroupDimensions.sumOfKnownWrapGroupChildWidths / this.wrapGroupDimensions.numberOfKnownWrapGroupChildSizes;\r\n\t\t\tlet averageChildHeight = this.wrapGroupDimensions.sumOfKnownWrapGroupChildHeights / this.wrapGroupDimensions.numberOfKnownWrapGroupChildSizes;\r\n\t\t\tdefaultChildWidth = this.childWidth || averageChildWidth || viewportWidth;\r\n\t\t\tdefaultChildHeight = this.childHeight || averageChildHeight || viewportHeight;\r\n\r\n\t\t\tif (this.horizontal) {\r\n\t\t\t\tif (viewportWidth > sumOfVisibleMaxWidths) {\r\n\t\t\t\t\twrapGroupsPerPage += Math.ceil((viewportWidth - sumOfVisibleMaxWidths) / defaultChildWidth);\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tif (viewportHeight > sumOfVisibleMaxHeights) {\r\n\t\t\t\t\twrapGroupsPerPage += Math.ceil((viewportHeight - sumOfVisibleMaxHeights) / defaultChildHeight);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tlet itemCount = this.items.length;\r\n\t\tlet itemsPerPage = itemsPerWrapGroup * wrapGroupsPerPage;\r\n\t\tlet pageCount_fractional = itemCount / itemsPerPage;\r\n\t\tlet numberOfWrapGroups = Math.ceil(itemCount / itemsPerWrapGroup);\r\n\r\n\t\tlet scrollLength = 0;\r\n\r\n\t\tlet defaultScrollLengthPerWrapGroup = this.horizontal ? defaultChildWidth : defaultChildHeight;\r\n\t\tif (this.enableUnequalChildrenSizes) {\r\n\t\t\tlet numUnknownChildSizes = 0;\r\n\t\t\tfor (let i = 0; i < numberOfWrapGroups; ++i) {\r\n\t\t\t\tlet childSize = this.wrapGroupDimensions.maxChildSizePerWrapGroup[i] && this.wrapGroupDimensions.maxChildSizePerWrapGroup[i][this._childScrollDim];\r\n\t\t\t\tif (childSize) {\r\n\t\t\t\t\tscrollLength += childSize;\r\n\t\t\t\t} else {\r\n\t\t\t\t\t++numUnknownChildSizes;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tscrollLength += Math.round(numUnknownChildSizes * defaultScrollLengthPerWrapGroup);\r\n\t\t} else {\r\n\t\t\tscrollLength = numberOfWrapGroups * defaultScrollLengthPerWrapGroup;\r\n\t\t}\r\n\r\n\t\tif (this.headerElementRef) {\r\n\t\t\tscrollLength += this.headerElementRef.nativeElement.clientHeight;\r\n\t\t}\r\n\r\n\t\tlet viewportLength = this.horizontal ? viewportWidth : viewportHeight;\r\n\t\tlet maxScrollPosition = Math.max(scrollLength - viewportLength, 0);\r\n\r\n\t\treturn {\r\n\t\t\titemCount: itemCount,\r\n\t\t\titemsPerWrapGroup: itemsPerWrapGroup,\r\n\t\t\twrapGroupsPerPage: wrapGroupsPerPage,\r\n\t\t\titemsPerPage: itemsPerPage,\r\n\t\t\tpageCount_fractional: pageCount_fractional,\r\n\t\t\tchildWidth: defaultChildWidth,\r\n\t\t\tchildHeight: defaultChildHeight,\r\n\t\t\tscrollLength: scrollLength,\r\n\t\t\tviewportLength: viewportLength,\r\n\t\t\tmaxScrollPosition: maxScrollPosition\r\n\t\t};\r\n\t}\r\n\r\n\tprotected cachedPageSize: number = 0;\r\n\tprotected previousScrollNumberElements: number = 0;\r\n\r\n\tprotected calculatePadding(arrayStartIndexWithBuffer: number, dimensions: IDimensions): number {\r\n\t\tif (dimensions.itemCount === 0) {\r\n\t\t\treturn 0;\r\n\t\t}\r\n\r\n\t\tlet defaultScrollLengthPerWrapGroup = dimensions[this._childScrollDim];\r\n\t\tlet startingWrapGroupIndex = Math.floor(arrayStartIndexWithBuffer / dimensions.itemsPerWrapGroup) || 0;\r\n\r\n\t\tif (!this.enableUnequalChildrenSizes) {\r\n\t\t\treturn defaultScrollLengthPerWrapGroup * startingWrapGroupIndex;\r\n\t\t}\r\n\r\n\t\tlet numUnknownChildSizes = 0;\r\n\t\tlet result = 0;\r\n\t\tfor (let i = 0; i < startingWrapGroupIndex; ++i) {\r\n\t\t\tlet childSize = this.wrapGroupDimensions.maxChildSizePerWrapGroup[i] && this.wrapGroupDimensions.maxChildSizePerWrapGroup[i][this._childScrollDim];\r\n\t\t\tif (childSize) {\r\n\t\t\t\tresult += childSize;\r\n\t\t\t} else {\r\n\t\t\t\t++numUnknownChildSizes;\r\n\t\t\t}\r\n\t\t}\r\n\t\tresult += Math.round(numUnknownChildSizes * defaultScrollLengthPerWrapGroup);\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\tprotected calculatePageInfo(scrollPosition: number, dimensions: IDimensions): IPageInfo {\r\n\t\tlet scrollPercentage = 0;\r\n\t\tif (this.enableUnequalChildrenSizes) {\r\n\t\t\tconst numberOfWrapGroups = Math.ceil(dimensions.itemCount / dimensions.itemsPerWrapGroup);\r\n\t\t\tlet totalScrolledLength = 0;\r\n\t\t\tlet defaultScrollLengthPerWrapGroup = dimensions[this._childScrollDim];\r\n\t\t\tfor (let i = 0; i < numberOfWrapGroups; ++i) {\r\n\t\t\t\tlet childSize = this.wrapGroupDimensions.maxChildSizePerWrapGroup[i] && this.wrapGroupDimensions.maxChildSizePerWrapGroup[i][this._childScrollDim];\r\n\t\t\t\tif (childSize) {\r\n\t\t\t\t\ttotalScrolledLength += childSize;\r\n\t\t\t\t} else {\r\n\t\t\t\t\ttotalScrolledLength += defaultScrollLengthPerWrapGroup;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (scrollPosition < totalScrolledLength) {\r\n\t\t\t\t\tscrollPercentage = i / numberOfWrapGroups;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tscrollPercentage = scrollPosition / dimensions.scrollLength;\r\n\t\t}\r\n\r\n\t\tlet startingArrayIndex_fractional = Math.min(Math.max(scrollPercentage * dimensions.pageCount_fractional, 0), dimensions.pageCount_fractional) * dimensions.itemsPerPage;\r\n\r\n\t\tlet maxStart = dimensions.itemCount - dimensions.itemsPerPage - 1;\r\n\t\tlet arrayStartIndex = Math.min(Math.floor(startingArrayIndex_fractional), maxStart);\r\n\t\tarrayStartIndex -= arrayStartIndex % dimensions.itemsPerWrapGroup; // round down to start of wrapGroup\r\n\r\n\t\tif (this.stripedTable) {\r\n\t\t\tlet bufferBoundary = 2 * dimensions.itemsPerWrapGroup;\r\n\t\t\tif (arrayStartIndex % bufferBoundary !== 0) {\r\n\t\t\t\tarrayStartIndex = Math.max(arrayStartIndex - arrayStartIndex % bufferBoundary, 0);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tlet arrayEndIndex = Math.ceil(startingArrayIndex_fractional) + dimensions.itemsPerPage - 1;\r\n\t\tlet endIndexWithinWrapGroup = (arrayEndIndex + 1) % dimensions.itemsPerWrapGroup;\r\n\t\tif (endIndexWithinWrapGroup > 0) {\r\n\t\t\tarrayEndIndex += dimensions.itemsPerWrapGroup - endIndexWithinWrapGroup; // round up to end of wrapGroup\r\n\t\t}\r\n\r\n\t\tif (isNaN(arrayStartIndex)) {\r\n\t\t\tarrayStartIndex = 0;\r\n\t\t}\r\n\t\tif (isNaN(arrayEndIndex)) {\r\n\t\t\tarrayEndIndex = 0;\r\n\t\t}\r\n\r\n\t\tarrayStartIndex = Math.min(Math.max(arrayStartIndex, 0), dimensions.itemCount - 1);\r\n\t\tarrayEndIndex = Math.min(Math.max(arrayEndIndex, 0), dimensions.itemCount - 1);\r\n\r\n\t\tlet bufferSize = this.bufferAmount * dimensions.itemsPerWrapGroup;\r\n\t\tlet startIndexWithBuffer = Math.min(Math.max(arrayStartIndex - bufferSize, 0), dimensions.itemCount - 1);\r\n\t\tlet endIndexWithBuffer = Math.min(Math.max(arrayEndIndex + bufferSize, 0), dimensions.itemCount - 1);\r\n\r\n\t\treturn {\r\n\t\t\tstartIndex: arrayStartIndex,\r\n\t\t\tendIndex: arrayEndIndex,\r\n\t\t\tstartIndexWithBuffer: startIndexWithBuffer,\r\n\t\t\tendIndexWithBuffer: endIndexWithBuffer,\r\n\t\t\tscrollStartPosition: scrollPosition,\r\n\t\t\tscrollEndPosition: scrollPosition + dimensions.viewportLength,\r\n\t\t\tmaxScrollPosition: dimensions.maxScrollPosition\r\n\t\t};\r\n\t}\r\n\r\n\tprotected calculateViewport(): IViewport {\r\n\t\tlet dimensions = this.calculateDimensions();\r\n\t\tlet offset = this.getElementsOffset();\r\n\r\n\t\tlet scrollStartPosition = this.getScrollStartPosition();\r\n\t\tif (scrollStartPosition > (dimensions.scrollLength + offset) && !(this.parentScroll instanceof Window)) {\r\n\t\t\tscrollStartPosition = dimensions.scrollLength;\r\n\t\t} else {\r\n\t\t\tscrollStartPosition -= offset;\r\n\t\t}\r\n\t\tscrollStartPosition = Math.max(0, scrollStartPosition);\r\n\r\n\t\tlet pageInfo = this.calculatePageInfo(scrollStartPosition, dimensions);\r\n\t\tlet newPadding = this.calculatePadding(pageInfo.startIndexWithBuffer, dimensions);\r\n\t\tlet newScrollLength = dimensions.scrollLength;\r\n\r\n\t\treturn {\r\n\t\t\tstartIndex: pageInfo.startIndex,\r\n\t\t\tendIndex: pageInfo.endIndex,\r\n\t\t\tstartIndexWithBuffer: pageInfo.startIndexWithBuffer,\r\n\t\t\tendIndexWithBuffer: pageInfo.endIndexWithBuffer,\r\n\t\t\tpadding: Math.round(newPadding),\r\n\t\t\tscrollLength: Math.round(newScrollLength),\r\n\t\t\tscrollStartPosition: pageInfo.scrollStartPosition,\r\n\t\t\tscrollEndPosition: pageInfo.scrollEndPosition,\r\n\t\t\tmaxScrollPosition: pageInfo.maxScrollPosition\r\n\t\t};\r\n\t}\r\n}\r\n\r\n@NgModule({\r\n\texports: [VirtualScrollerComponent],\r\n\tdeclarations: [VirtualScrollerComponent],\r\n\timports: [CommonModule],\r\n\tproviders: [\r\n\t\t{\r\n\t\t\tprovide: 'virtual-scroller-default-options',\r\n\t\t\tuseFactory: VIRTUAL_SCROLLER_DEFAULT_OPTIONS_FACTORY\r\n\t\t}\r\n\t]\r\n})\r\nexport class VirtualScrollerModule { }","import { Component, OnInit, HostListener, ChangeDetectionStrategy, OnDestroy, NgModule, SimpleChanges, OnChanges, ChangeDetectorRef, AfterViewChecked, ViewEncapsulation, ContentChild, ViewChild, forwardRef, Input, Output, EventEmitter, ElementRef, AfterViewInit, Pipe, PipeTransform } from '@angular/core';\r\nimport { FormsModule, NG_VALUE_ACCESSOR, ControlValueAccessor, NG_VALIDATORS, Validator, FormControl } from '@angular/forms';\r\nimport { CommonModule } from '@angular/common';\r\nimport { MyException } from './multiselect.model';\r\nimport { DropdownSettings } from './multiselect.interface';\r\nimport { ClickOutsideDirective, ScrollDirective, styleDirective, setPosition } from './clickOutside';\r\nimport { ListFilterPipe } from './list-filter';\r\nimport { Item, Badge, Search, TemplateRenderer, CIcon } from './menu-item';\r\nimport { DataService } from './multiselect.service';\r\nimport { Subscription, Subject } from 'rxjs';\r\nimport { VirtualScrollerModule, VirtualScrollerComponent } from './virtual-scroll/virtual-scroll';\r\nimport { map, debounceTime, distinctUntilChanged, switchMap, tap } from 'rxjs/operators';\r\nimport { ThrowStmt } from '@angular/compiler';\r\n\r\nexport const DROPDOWN_CONTROL_VALUE_ACCESSOR: any = {\r\n    provide: NG_VALUE_ACCESSOR,\r\n    useExisting: forwardRef(() => AngularMultiSelect),\r\n    multi: true\r\n};\r\nexport const DROPDOWN_CONTROL_VALIDATION: any = {\r\n    provide: NG_VALIDATORS,\r\n    useExisting: forwardRef(() => AngularMultiSelect),\r\n    multi: true,\r\n}\r\nconst noop = () => {\r\n};\r\n\r\n@Component({\r\n    selector: 'angular2-multiselect',\r\n    templateUrl: './multiselect.component.html',\r\n    host: { '[class]': 'defaultSettings.classes' },\r\n    styleUrls: ['./multiselect.component.scss'],\r\n    providers: [DROPDOWN_CONTROL_VALUE_ACCESSOR, DROPDOWN_CONTROL_VALIDATION],\r\n    encapsulation: ViewEncapsulation.None,\r\n})\r\n\r\nexport class AngularMultiSelect implements OnInit, ControlValueAccessor, OnChanges, Validator, AfterViewChecked, OnDestroy {\r\n\r\n    @Input()\r\n    data: Array<any>;\r\n\r\n    @Input()\r\n    settings: DropdownSettings;\r\n\r\n    @Input()\r\n    loading: boolean;\r\n\r\n    @Output('onSelect')\r\n    onSelect: EventEmitter<any> = new EventEmitter<any>();\r\n\t\r\n\t@Output('onSearch')\r\n    onSearch: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n    @Output('onDeSelect')\r\n    onDeSelect: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n    @Output('onSelectAll')\r\n    onSelectAll: EventEmitter<Array<any>> = new EventEmitter<Array<any>>();\r\n\r\n    @Output('onDeSelectAll')\r\n    onDeSelectAll: EventEmitter<Array<any>> = new EventEmitter<Array<any>>();\r\n\r\n    @Output('onOpen')\r\n    onOpen: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n    @Output('onClose')\r\n    onClose: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n    @Output('onScrollToEnd')\r\n    onScrollToEnd: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n    @Output('onFilterSelectAll')\r\n    onFilterSelectAll: EventEmitter<Array<any>> = new EventEmitter<Array<any>>();\r\n\r\n    @Output('onFilterDeSelectAll')\r\n    onFilterDeSelectAll: EventEmitter<Array<any>> = new EventEmitter<Array<any>>();\r\n\r\n    @Output('onAddFilterNewItem')\r\n    onAddFilterNewItem: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n    @Output('onGroupSelect')\r\n    onGroupSelect: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n    @Output('onGroupDeSelect')\r\n    onGroupDeSelect: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n    @ContentChild(Item, { static: false }) itemTempl: Item;\r\n    @ContentChild(Badge, { static: false }) badgeTempl: Badge;\r\n    @ContentChild(Search, { static: false }) searchTempl: Search;\r\n\r\n\r\n    @ViewChild('searchInput', { static: false }) searchInput: ElementRef;\r\n    @ViewChild('selectedList', { static: false }) selectedListElem: ElementRef;\r\n    @ViewChild('dropdownList', { static: false }) dropdownListElem: ElementRef;\r\n\r\n    @HostListener('document:keyup.escape', ['$event'])\r\n    onEscapeDown(event: KeyboardEvent) {\r\n        if (this.settings.escapeToClose) {\r\n            this.closeDropdown();\r\n        }\r\n    }\r\n    virtualdata: any = [];\r\n    searchTerm$ = new Subject<string>();\r\n\r\n    filterPipe: ListFilterPipe;\r\n    public selectedItems: Array<any>;\r\n    public isActive: boolean = false;\r\n    public isSelectAll: boolean = false;\r\n    public isFilterSelectAll: boolean = false;\r\n    public isInfiniteFilterSelectAll: boolean = false;\r\n    public groupedData: Array<any>;\r\n    filter: any;\r\n    public chunkArray: any[];\r\n    public scrollTop: any;\r\n    public chunkIndex: any[] = [];\r\n    public cachedItems: any[] = [];\r\n    public groupCachedItems: any[] = [];\r\n    public totalRows: any;\r\n    public itemHeight: any = 41.6;\r\n    public screenItemsLen: any;\r\n    public cachedItemsLen: any;\r\n    public totalHeight: any;\r\n    public scroller: any;\r\n    public maxBuffer: any;\r\n    public lastScrolled: any;\r\n    public lastRepaintY: any;\r\n    public selectedListHeight: any;\r\n    public filterLength: any = 0;\r\n    public infiniteFilterLength: any = 0;\r\n    public viewPortItems: any;\r\n    public item: any;\r\n    public dropdownListYOffset: number = 0;\r\n    subscription: Subscription;\r\n    defaultSettings: DropdownSettings = {\r\n        singleSelection: false,\r\n        text: 'Select',\r\n        enableCheckAll: true,\r\n        selectAllText: 'Select All',\r\n        unSelectAllText: 'UnSelect All',\r\n        filterSelectAllText: 'Select all filtered results',\r\n        filterUnSelectAllText: 'UnSelect all filtered results',\r\n        enableSearchFilter: false,\r\n        searchBy: [],\r\n        maxHeight: 300,\r\n        badgeShowLimit: 999999999999,\r\n        classes: '',\r\n        disabled: false,\r\n        searchPlaceholderText: 'Search',\r\n        showCheckbox: true,\r\n        noDataLabel: 'No Data Available',\r\n        searchAutofocus: true,\r\n        lazyLoading: false,\r\n        labelKey: 'itemName',\r\n        primaryKey: 'id',\r\n        position: 'bottom',\r\n        autoPosition: true,\r\n        enableFilterSelectAll: true,\r\n        selectGroup: false,\r\n        addNewItemOnFilter: false,\r\n        addNewButtonText: \"Add\",\r\n        escapeToClose: true,\r\n        clearAll: true\r\n    }\r\n    randomSize: boolean = true;\r\n    public parseError: boolean;\r\n    public filteredList: any = [];\r\n    virtualScroollInit: boolean = false;\r\n    @ViewChild(VirtualScrollerComponent, { static: false })\r\n    private virtualScroller: VirtualScrollerComponent;\r\n    public isDisabledItemPresent = false;\r\n\r\n    constructor(public _elementRef: ElementRef, private cdr: ChangeDetectorRef, private ds: DataService) {\r\n        this.searchTerm$.asObservable().pipe(\r\n            debounceTime(1000),\r\n            distinctUntilChanged(),\r\n            tap(term => term)\r\n        ).subscribe(val => {\r\n            this.filterInfiniteList(val);\r\n        });\r\n    }\r\n    ngOnInit() {\r\n        this.settings = Object.assign(this.defaultSettings, this.settings);\r\n\r\n        this.cachedItems = this.cloneArray(this.data);\r\n        if (this.settings.position == 'top') {\r\n            setTimeout(() => {\r\n                this.selectedListHeight = { val: 0 };\r\n                this.selectedListHeight.val = this.selectedListElem.nativeElement.clientHeight;\r\n            });\r\n        }\r\n        this.subscription = this.ds.getData().subscribe(data => {\r\n            if (data) {\r\n                let len = 0;\r\n                data.forEach((obj: any, i: any) => {\r\n                    if (obj.disabled) {\r\n                        this.isDisabledItemPresent = true;\r\n                    }\r\n                    if (!obj.hasOwnProperty('grpTitle')) {\r\n                        len++;\r\n                    }\r\n                });\r\n                this.filterLength = len;\r\n                this.onFilterChange(data);\r\n            }\r\n\r\n        });\r\n        setTimeout(() => {\r\n            this.calculateDropdownDirection();\r\n        });\r\n        this.virtualScroollInit = false;\r\n    }\r\n    ngOnChanges(changes: SimpleChanges) {\r\n        if (changes.data && !changes.data.firstChange) {\r\n            if (this.settings.groupBy) {\r\n                this.groupedData = this.transformData(this.data, this.settings.groupBy);\r\n                if (this.data.length == 0) {\r\n                    this.selectedItems = [];\r\n                }\r\n                this.groupCachedItems = this.cloneArray(this.groupedData);\r\n            }\r\n            this.cachedItems = this.cloneArray(this.data);\r\n        }\r\n        if (changes.settings && !changes.settings.firstChange) {\r\n            this.settings = Object.assign(this.defaultSettings, this.settings);\r\n        }\r\n        if (changes.loading) {\r\n        }\r\n        if (this.settings.lazyLoading && this.virtualScroollInit && changes.data) {\r\n            this.virtualdata = changes.data.currentValue;\r\n        }\r\n    }\r\n    ngDoCheck() {\r\n        if (this.selectedItems) {\r\n            if (this.selectedItems.length == 0 || this.data.length == 0 || this.selectedItems.length < this.data.length) {\r\n                this.isSelectAll = false;\r\n            }\r\n        }\r\n    }\r\n    ngAfterViewInit() {\r\n        if (this.settings.lazyLoading) {\r\n            // this._elementRef.nativeElement.getElementsByClassName(\"lazyContainer\")[0].addEventListener('scroll', this.onScroll.bind(this));\r\n        }\r\n    }\r\n    ngAfterViewChecked() {\r\n        if (this.selectedListElem.nativeElement.clientHeight && this.settings.position == 'top' && this.selectedListHeight) {\r\n            this.selectedListHeight.val = this.selectedListElem.nativeElement.clientHeight;\r\n            this.cdr.detectChanges();\r\n        }\r\n    }\r\n    onItemClick(item: any, index: number, evt: Event) {\r\n        if (item.disabled) {\r\n            return false;\r\n        }\r\n\r\n        if (this.settings.disabled) {\r\n            return false;\r\n        }\r\n\r\n        let found = this.isSelected(item);\r\n        let limit = this.selectedItems.length < this.settings.limitSelection ? true : false;\r\n\r\n        if (!found) {\r\n            if (this.settings.limitSelection) {\r\n                if (limit) {\r\n                    this.addSelected(item);\r\n                    this.onSelect.emit(item);\r\n                }\r\n            }\r\n            else {\r\n                this.addSelected(item);\r\n                this.onSelect.emit(item);\r\n            }\r\n\r\n        }\r\n        else {\r\n            this.removeSelected(item);\r\n            this.onDeSelect.emit(item);\r\n        }\r\n        if (this.isSelectAll || this.data.length > this.selectedItems.length) {\r\n            this.isSelectAll = false;\r\n        }\r\n\r\n        if (this.data.length == this.selectedItems.length) {\r\n            this.isSelectAll = true;\r\n        }\r\n        if (this.settings.groupBy) {\r\n            this.updateGroupInfo(item);\r\n        }\r\n    }\r\n    public validate(c: FormControl): any {\r\n        return null;\r\n    }\r\n    private onTouchedCallback: (_: any) => void = noop;\r\n    private onChangeCallback: (_: any) => void = noop;\r\n\r\n    writeValue(value: any) {\r\n        if (value !== undefined && value !== null && value !== '') {\r\n            if (this.settings.singleSelection) {\r\n                if (this.settings.groupBy) {\r\n                    this.groupedData = this.transformData(this.data, this.settings.groupBy);\r\n                    this.groupCachedItems = this.cloneArray(this.groupedData);\r\n                    this.selectedItems = [value[0]];\r\n                } else {\r\n                    try {\r\n\r\n                        if (value.length > 1) {\r\n                            this.selectedItems = [value[0]];\r\n                            throw new MyException(404, { \"msg\": \"Single Selection Mode, Selected Items cannot have more than one item.\" });\r\n                        }\r\n                        else {\r\n                            this.selectedItems = value;\r\n                        }\r\n                    }\r\n                    catch (e) {\r\n                        console.error(e.body.msg);\r\n                    }\r\n                }\r\n\r\n            }\r\n            else {\r\n                if (this.settings.limitSelection) {\r\n                    this.selectedItems = value.slice(0, this.settings.limitSelection);\r\n                }\r\n                else {\r\n                    this.selectedItems = value;\r\n                }\r\n                if (this.selectedItems.length === this.data.length && this.data.length > 0) {\r\n                    this.isSelectAll = true;\r\n                }\r\n                if (this.settings.groupBy) {\r\n                    this.groupedData = this.transformData(this.data, this.settings.groupBy);\r\n                    this.groupCachedItems = this.cloneArray(this.groupedData);\r\n                }\r\n            }\r\n        } else {\r\n            this.selectedItems = [];\r\n        }\r\n    }\r\n\r\n    //From ControlValueAccessor interface\r\n    registerOnChange(fn: any) {\r\n        this.onChangeCallback = fn;\r\n    }\r\n\r\n    //From ControlValueAccessor interface\r\n    registerOnTouched(fn: any) {\r\n        this.onTouchedCallback = fn;\r\n    }\r\n    trackByFn(index: number, item: any) {\r\n        return item[this.settings.primaryKey];\r\n    }\r\n    isSelected(clickedItem: any) {\r\n        if (clickedItem.disabled) {\r\n            return false;\r\n        }\r\n        let found = false;\r\n        this.selectedItems && this.selectedItems.forEach(item => {\r\n            if (clickedItem[this.settings.primaryKey] === item[this.settings.primaryKey]) {\r\n                found = true;\r\n            }\r\n        });\r\n        return found;\r\n    }\r\n    addSelected(item: any) {\r\n        if (item.disabled) {\r\n            return;\r\n        }\r\n        if (this.settings.singleSelection) {\r\n            this.selectedItems = [];\r\n            this.selectedItems.push(item);\r\n            this.closeDropdown();\r\n        }\r\n        else\r\n            this.selectedItems.push(item);\r\n        this.onChangeCallback(this.selectedItems);\r\n        this.onTouchedCallback(this.selectedItems);\r\n    }\r\n    removeSelected(clickedItem: any) {\r\n        this.selectedItems && this.selectedItems.forEach(item => {\r\n            if (clickedItem[this.settings.primaryKey] === item[this.settings.primaryKey]) {\r\n                this.selectedItems.splice(this.selectedItems.indexOf(item), 1);\r\n            }\r\n        });\r\n        this.onChangeCallback(this.selectedItems);\r\n        this.onTouchedCallback(this.selectedItems);\r\n    }\r\n    toggleDropdown(evt: any) {\r\n        if (this.settings.disabled) {\r\n            return false;\r\n        }\r\n        this.isActive = !this.isActive;\r\n        if (this.isActive) {\r\n            if (this.settings.searchAutofocus && this.searchInput && this.settings.enableSearchFilter && !this.searchTempl) {\r\n                setTimeout(() => {\r\n                    this.searchInput.nativeElement.focus();\r\n                }, 0);\r\n            }\r\n            if (this.settings.searchAutofocus && !this.searchInput && this.settings.enableSearchFilter && this.searchTempl) {\r\n                setTimeout(() => {\r\n                    this._elementRef.nativeElement.getElementsByClassName(\"list-filter\")[0].getElementsByTagName(\"input\")[0].focus();\r\n                }, 0);\r\n            }\r\n            this.onOpen.emit(true);\r\n        }\r\n        else {\r\n            this.onClose.emit(false);\r\n        }\r\n        setTimeout(() => {\r\n            this.calculateDropdownDirection();\r\n        }, 0);\r\n        if (this.settings.lazyLoading) {\r\n            this.virtualdata = this.data;\r\n            this.virtualScroollInit = true;\r\n        }\r\n        evt.preventDefault();\r\n    }\r\n    public openDropdown() {\r\n        if (this.settings.disabled) {\r\n            return false;\r\n        }\r\n        this.isActive = true;\r\n        if (this.settings.searchAutofocus && this.searchInput && this.settings.enableSearchFilter && !this.searchTempl) {\r\n            setTimeout(() => {\r\n                this.searchInput.nativeElement.focus();\r\n            }, 0);\r\n        }\r\n        this.onOpen.emit(true);\r\n    }\r\n    public closeDropdown() {\r\n        if (this.searchInput && this.settings.lazyLoading) {\r\n            this.searchInput.nativeElement.value = \"\";\r\n        }\r\n        if (this.searchInput) {\r\n            this.searchInput.nativeElement.value = \"\";\r\n        }\r\n        this.filter = \"\";\r\n        this.isActive = false;\r\n        this.onClose.emit(false);\r\n    }\r\n    public closeDropdownOnClickOut() {\r\n        if (this.isActive) {\r\n            if (this.searchInput && this.settings.lazyLoading) {\r\n                this.searchInput.nativeElement.value = \"\";\r\n            }\r\n            if (this.searchInput) {\r\n                this.searchInput.nativeElement.value = \"\";\r\n            }\r\n            this.filter = \"\";\r\n            this.isActive = false;\r\n            this.clearSearch();\r\n            this.onClose.emit(false);\r\n        }\r\n    }\r\n    toggleSelectAll() {\r\n        if (!this.isSelectAll) {\r\n            this.selectedItems = [];\r\n            if (this.settings.groupBy) {\r\n                this.groupedData.forEach((obj) => {\r\n                    obj.selected = !obj.disabled;\r\n                })\r\n                this.groupCachedItems.forEach((obj) => {\r\n                    obj.selected = !obj.disabled;\r\n                })\r\n            }\r\n            // this.selectedItems = this.data.slice();\r\n            this.selectedItems = this.data.filter((individualData) => !individualData.disabled);\r\n            this.isSelectAll = true;\r\n            this.onChangeCallback(this.selectedItems);\r\n            this.onTouchedCallback(this.selectedItems);\r\n\r\n            this.onSelectAll.emit(this.selectedItems);\r\n        }\r\n        else {\r\n            if (this.settings.groupBy) {\r\n                this.groupedData.forEach((obj) => {\r\n                    obj.selected = false;\r\n                });\r\n                this.groupCachedItems.forEach((obj) => {\r\n                    obj.selected = false;\r\n                })\r\n            }\r\n            this.selectedItems = [];\r\n            this.isSelectAll = false;\r\n            this.onChangeCallback(this.selectedItems);\r\n            this.onTouchedCallback(this.selectedItems);\r\n\r\n            this.onDeSelectAll.emit(this.selectedItems);\r\n        }\r\n    }\r\n    filterGroupedList() {\r\n        if (this.filter == \"\" || this.filter == null) {\r\n            this.clearSearch();\r\n            return;\r\n        }\r\n        this.groupedData = this.cloneArray(this.groupCachedItems);\r\n        this.groupedData = this.groupedData.filter(obj => {\r\n            let arr = [];\r\n            if (obj[this.settings.labelKey].toLowerCase().indexOf(this.filter.toLowerCase()) > -1) {\r\n                arr = obj.list;\r\n            }\r\n            else {\r\n                arr = obj.list.filter(t => {\r\n                    return t[this.settings.labelKey].toLowerCase().indexOf(this.filter.toLowerCase()) > -1;\r\n                });\r\n            }\r\n\r\n            obj.list = arr;\r\n            if (obj[this.settings.labelKey].toLowerCase().indexOf(this.filter.toLowerCase()) > -1) {\r\n                return arr;\r\n            }\r\n            else {\r\n                return arr.some(cat => {\r\n                    return cat[this.settings.labelKey].toLowerCase().indexOf(this.filter.toLowerCase()) > -1;\r\n                }\r\n                )\r\n            }\r\n\r\n        });\r\n    }\r\n    toggleFilterSelectAll() {\r\n        if (!this.isFilterSelectAll) {\r\n            let added = [];\r\n            if (this.settings.groupBy) {\r\n                /*                 this.groupedData.forEach((item: any) => {\r\n                                    if (item.list) {\r\n                                        item.list.forEach((el: any) => {\r\n                                            if (!this.isSelected(el)) {\r\n                                                this.addSelected(el);\r\n                                                added.push(el);\r\n                                            }\r\n                                        });\r\n                                    }\r\n                                    this.updateGroupInfo(item);\r\n                \r\n                                }); */\r\n\r\n                this.ds.getFilteredData().forEach((el: any) => {\r\n                    if (!this.isSelected(el) && !el.hasOwnProperty('grpTitle')) {\r\n                        this.addSelected(el);\r\n                        added.push(el);\r\n                    }\r\n                });\r\n\r\n            }\r\n            else {\r\n                this.ds.getFilteredData().forEach((item: any) => {\r\n                    if (!this.isSelected(item)) {\r\n                        this.addSelected(item);\r\n                        added.push(item);\r\n                    }\r\n\r\n                });\r\n            }\r\n\r\n            this.isFilterSelectAll = true;\r\n            this.onFilterSelectAll.emit(added);\r\n        }\r\n        else {\r\n            let removed = [];\r\n            if (this.settings.groupBy) {\r\n                /*                 this.groupedData.forEach((item: any) => {\r\n                                    if (item.list) {\r\n                                        item.list.forEach((el: any) => {\r\n                                            if (this.isSelected(el)) {\r\n                                                this.removeSelected(el);\r\n                                                removed.push(el);\r\n                                            }\r\n                                        });\r\n                                    }\r\n                                }); */\r\n                this.ds.getFilteredData().forEach((el: any) => {\r\n                    if (this.isSelected(el)) {\r\n                        this.removeSelected(el);\r\n                        removed.push(el);\r\n                    }\r\n                });\r\n            }\r\n            else {\r\n                this.ds.getFilteredData().forEach((item: any) => {\r\n                    if (this.isSelected(item)) {\r\n                        this.removeSelected(item);\r\n                        removed.push(item);\r\n                    }\r\n\r\n                });\r\n            }\r\n            this.isFilterSelectAll = false;\r\n            this.onFilterDeSelectAll.emit(removed);\r\n        }\r\n    }\r\n    toggleInfiniteFilterSelectAll() {\r\n        if (!this.isInfiniteFilterSelectAll) {\r\n            this.virtualdata.forEach((item: any) => {\r\n                if (!this.isSelected(item)) {\r\n                    this.addSelected(item);\r\n                }\r\n            });\r\n            this.isInfiniteFilterSelectAll = true;\r\n        }\r\n        else {\r\n            this.virtualdata.forEach((item: any) => {\r\n                if (this.isSelected(item)) {\r\n                    this.removeSelected(item);\r\n                }\r\n\r\n            });\r\n            this.isInfiniteFilterSelectAll = false;\r\n        }\r\n    }\r\n    clearSearch() {\r\n        if (this.settings.groupBy) {\r\n            this.groupedData = [];\r\n            this.groupedData = this.cloneArray(this.groupCachedItems);\r\n        }\r\n        this.filter = \"\";\r\n        this.isFilterSelectAll = false;\r\n\r\n    }\r\n    onFilterChange(data: any) {\r\n        if (this.filter && this.filter == \"\" || data.length == 0) {\r\n            this.isFilterSelectAll = false;\r\n        }\r\n        let cnt = 0;\r\n        data.forEach((item: any) => {\r\n\r\n            if (!item.hasOwnProperty('grpTitle') && this.isSelected(item)) {\r\n                cnt++;\r\n            }\r\n        });\r\n\r\n        if (cnt > 0 && this.filterLength == cnt) {\r\n            this.isFilterSelectAll = true;\r\n        }\r\n        else if (cnt > 0 && this.filterLength != cnt) {\r\n            this.isFilterSelectAll = false;\r\n        }\r\n\t\tthis.onSearch.emit(this.filter);\r\n        this.cdr.detectChanges();\r\n    }\r\n    cloneArray(arr: any) {\r\n        let i, copy;\r\n\r\n        if (Array.isArray(arr)) {\r\n            return JSON.parse(JSON.stringify(arr));\r\n        } else if (typeof arr === 'object') {\r\n            throw 'Cannot clone array containing an object!';\r\n        } else {\r\n            return arr;\r\n        }\r\n    }\r\n    updateGroupInfo(item: any) {\r\n        if (item.disabled) {\r\n            return false;\r\n        }\r\n        let key = this.settings.groupBy;\r\n        this.groupedData.forEach((obj: any) => {\r\n            let cnt = 0;\r\n            if (obj.grpTitle && (item[key] == obj[key])) {\r\n                if (obj.list) {\r\n                    obj.list.forEach((el: any) => {\r\n                        if (this.isSelected(el)) {\r\n                            cnt++;\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n            if (obj.list && (cnt === obj.list.length) && (item[key] == obj[key])) {\r\n                obj.selected = true;\r\n            }\r\n            else if (obj.list && (cnt != obj.list.length) && (item[key] == obj[key])) {\r\n                obj.selected = false;\r\n            }\r\n        });\r\n        this.groupCachedItems.forEach((obj: any) => {\r\n            let cnt = 0;\r\n            if (obj.grpTitle && (item[key] == obj[key])) {\r\n                if (obj.list) {\r\n                    obj.list.forEach((el: any) => {\r\n                        if (this.isSelected(el)) {\r\n                            cnt++;\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n            if (obj.list && (cnt === obj.list.length) && (item[key] == obj[key])) {\r\n                obj.selected = true;\r\n            }\r\n            else if (obj.list && (cnt != obj.list.length) && (item[key] == obj[key])) {\r\n                obj.selected = false;\r\n            }\r\n        });\r\n    }\r\n    transformData(arr: Array<any>, field: any): Array<any> {\r\n        const groupedObj: any = arr.reduce((prev: any, cur: any) => {\r\n            if (!prev[cur[field]]) {\r\n                prev[cur[field]] = [cur];\r\n            } else {\r\n                prev[cur[field]].push(cur);\r\n            }\r\n            return prev;\r\n        }, {});\r\n        const tempArr: any = [];\r\n        Object.keys(groupedObj).map((x: any) => {\r\n            let obj: any = {};\r\n            let disabledChildrens = [];\r\n            obj[\"grpTitle\"] = true;\r\n            obj[this.settings.labelKey] = x;\r\n            obj[this.settings.groupBy] = x;\r\n            obj['selected'] = false;\r\n            obj['list'] = [];\r\n            let cnt = 0;\r\n            groupedObj[x].forEach((item: any) => {\r\n                item['list'] = [];\r\n                if (item.disabled) {\r\n                    this.isDisabledItemPresent = true;\r\n                    disabledChildrens.push(item);\r\n                }\r\n                obj.list.push(item);\r\n                if (this.isSelected(item)) {\r\n                    cnt++;\r\n                }\r\n            });\r\n            if (cnt == obj.list.length) {\r\n                obj.selected = true;\r\n            }\r\n            else {\r\n                obj.selected = false;\r\n            }\r\n\r\n            // Check if current group item's all childrens are disabled or not\r\n            obj['disabled'] = disabledChildrens.length === groupedObj[x].length;\r\n            tempArr.push(obj);\r\n            // obj.list.forEach((item: any) => {\r\n            //     tempArr.push(item);\r\n            // });\r\n        });\r\n        return tempArr;\r\n    }\r\n    public filterInfiniteList(evt: any) {\r\n        let filteredElems: Array<any> = [];\r\n        if (this.settings.groupBy) {\r\n            this.groupedData = this.groupCachedItems.slice();\r\n        }\r\n        else {\r\n            this.data = this.cachedItems.slice();\r\n            this.virtualdata = this.cachedItems.slice();\r\n        }\r\n\r\n        if ((evt != null || evt != '') && !this.settings.groupBy) {\r\n            if (this.settings.searchBy.length > 0) {\r\n                for (let t = 0; t < this.settings.searchBy.length; t++) {\r\n\r\n                    this.virtualdata.filter((el: any) => {\r\n                        if (el[this.settings.searchBy[t].toString()].toString().toLowerCase().indexOf(evt.toString().toLowerCase()) >= 0) {\r\n                            filteredElems.push(el);\r\n                        }\r\n                    });\r\n                }\r\n\r\n            }\r\n            else {\r\n                this.virtualdata.filter(function (el: any) {\r\n                    for (let prop in el) {\r\n                        if (el[prop].toString().toLowerCase().indexOf(evt.toString().toLowerCase()) >= 0) {\r\n                            filteredElems.push(el);\r\n                            break;\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n            this.virtualdata = [];\r\n            this.virtualdata = filteredElems;\r\n            this.infiniteFilterLength = this.virtualdata.length;\r\n        }\r\n        if (evt.toString() != '' && this.settings.groupBy) {\r\n            this.groupedData.filter(function (el: any) {\r\n                if (el.hasOwnProperty('grpTitle')) {\r\n                    filteredElems.push(el);\r\n                }\r\n                else {\r\n                    for (let prop in el) {\r\n                        if (el[prop].toString().toLowerCase().indexOf(evt.toString().toLowerCase()) >= 0) {\r\n                            filteredElems.push(el);\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n            this.groupedData = [];\r\n            this.groupedData = filteredElems;\r\n            this.infiniteFilterLength = this.groupedData.length;\r\n        }\r\n        else if (evt.toString() == '' && this.cachedItems.length > 0) {\r\n            this.virtualdata = [];\r\n            this.virtualdata = this.cachedItems;\r\n            this.infiniteFilterLength = 0;\r\n        }\r\n        this.virtualScroller.refresh();\r\n    }\r\n    resetInfiniteSearch() {\r\n        this.filter = \"\";\r\n        this.isInfiniteFilterSelectAll = false;\r\n        this.virtualdata = [];\r\n        this.virtualdata = this.cachedItems;\r\n        this.groupedData = this.groupCachedItems;\r\n        this.infiniteFilterLength = 0;\r\n    }\r\n    onScrollEnd(e: any) {\r\n        if (e.endIndex === this.data.length - 1 || e.startIndex === 0) {\r\n\r\n        }\r\n        this.onScrollToEnd.emit(e);\r\n\r\n    }\r\n    ngOnDestroy() {\r\n        if (this.subscription) {\r\n            this.subscription.unsubscribe();\r\n        }\r\n\r\n    }\r\n    selectGroup(item: any) {\r\n        if (item.disabled) {\r\n            return false;\r\n        }\r\n        if (item.selected) {\r\n            item.selected = false;\r\n            item.list.forEach((obj: any) => {\r\n                this.removeSelected(obj);\r\n            });\r\n            this.updateGroupInfo(item);\r\n            this.onGroupSelect.emit(item);\r\n        }\r\n        else {\r\n            item.selected = true;\r\n            item.list.forEach((obj: any) => {\r\n                if (!this.isSelected(obj)) {\r\n                    this.addSelected(obj);\r\n                }\r\n\r\n            });\r\n            this.updateGroupInfo(item);\r\n            this.onGroupDeSelect.emit(item);\r\n        }\r\n\r\n\r\n    }\r\n    addFilterNewItem() {\r\n        this.onAddFilterNewItem.emit(this.filter);\r\n        this.filterPipe = new ListFilterPipe(this.ds);\r\n        this.filterPipe.transform(this.data, this.filter, this.settings.searchBy);\r\n    }\r\n    calculateDropdownDirection() {\r\n        let shouldOpenTowardsTop = this.settings.position == 'top';\r\n        if (this.settings.autoPosition) {\r\n            const dropdownHeight = this.dropdownListElem.nativeElement.clientHeight;\r\n            const viewportHeight = document.documentElement.clientHeight;\r\n            const selectedListBounds = this.selectedListElem.nativeElement.getBoundingClientRect();\r\n\r\n            const spaceOnTop: number = selectedListBounds.top;\r\n            const spaceOnBottom: number = viewportHeight - selectedListBounds.top;\r\n            if (spaceOnBottom < spaceOnTop && dropdownHeight < spaceOnTop) {\r\n                this.openTowardsTop(true);\r\n            }\r\n            else {\r\n                this.openTowardsTop(false);\r\n            }\r\n            // Keep preference if there is not enough space on either the top or bottom\r\n            /* \t\t\tif (spaceOnTop || spaceOnBottom) {\r\n                            if (shouldOpenTowardsTop) {\r\n                                shouldOpenTowardsTop = spaceOnTop;\r\n                            } else {\r\n                                shouldOpenTowardsTop = !spaceOnBottom;\r\n                            }\r\n                        } */\r\n        }\r\n\r\n    }\r\n    openTowardsTop(value: boolean) {\r\n        if (value && this.selectedListElem.nativeElement.clientHeight) {\r\n            this.dropdownListYOffset = 15 + this.selectedListElem.nativeElement.clientHeight;\r\n        } else {\r\n            this.dropdownListYOffset = 0;\r\n        }\r\n    }\r\n    clearSelection(e: any) {\r\n        if (this.settings.groupBy) {\r\n            this.groupCachedItems.forEach((obj) => {\r\n                obj.selected = false;\r\n            })\r\n        }\r\n        this.clearSearch();\r\n        this.selectedItems = [];\r\n        this.onDeSelectAll.emit(this.selectedItems);\r\n    }\r\n}\r\n\r\n@NgModule({\r\n    imports: [CommonModule, FormsModule, VirtualScrollerModule],\r\n    declarations: [AngularMultiSelect, ClickOutsideDirective, ScrollDirective, styleDirective, ListFilterPipe, Item, TemplateRenderer, Badge, Search, setPosition, CIcon],\r\n    exports: [AngularMultiSelect, ClickOutsideDirective, ScrollDirective, styleDirective, ListFilterPipe, Item, TemplateRenderer, Badge, Search, setPosition, CIcon],\r\n    providers: [DataService]\r\n})\r\nexport class AngularMultiSelectModule { }\r\n"]}